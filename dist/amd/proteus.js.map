{"version":3,"sources":["webpack:///webpack/bootstrap 7390dba76703bfca1f36","webpack:///./dist/commonjs/proteus/errors/DontCallConstructor.js","webpack:///./dist/commonjs/proteus/util/TypeUtil.js","webpack:///./dist/commonjs/proteus/util/ClassUtil.js","webpack:///./~/cbor-codec/build/cbor.js","webpack:///./dist/commonjs/proteus/keys/PublicKey.js","webpack:///./dist/commonjs/proteus/keys/KeyPair.js","webpack:///./dist/commonjs/proteus/errors/ProteusError.js","webpack:///./dist/commonjs/proteus/keys/IdentityKey.js","webpack:///./dist/commonjs/proteus/message/CipherMessage.js","webpack:///./dist/commonjs/proteus/session/ChainKey.js","webpack:///./dist/commonjs/proteus/errors/DecodeError.js","webpack:///./dist/commonjs/proteus/errors/DecryptError.js","webpack:///./dist/commonjs/proteus/keys/IdentityKeyPair.js","webpack:///./dist/commonjs/proteus/message/Envelope.js","webpack:///./dist/commonjs/proteus/message/Message.js","webpack:///./dist/commonjs/proteus/message/PreKeyMessage.js","webpack:///./dist/commonjs/proteus/derived/MacKey.js","webpack:///./dist/commonjs/proteus/keys/PreKey.js","webpack:///./dist/commonjs/proteus/keys/PreKeyBundle.js","webpack:///./dist/commonjs/proteus/keys/SecretKey.js","webpack:///./dist/commonjs/proteus/derived/CipherKey.js","webpack:///./dist/commonjs/proteus/derived/DerivedSecrets.js","webpack:///./dist/commonjs/proteus/message/SessionTag.js","webpack:///./~/cbor-codec/build/cbor/DecodeError.js","webpack:///./~/cbor-codec/build/cbor/Types.js","webpack:///./dist/commonjs/proteus/keys/PreKeyAuth.js","webpack:///./dist/commonjs/proteus/session/PreKeyStore.js","webpack:///./dist/commonjs/proteus/session/Session.js","webpack:///./dist/commonjs/proteus/session/MessageKeys.js","webpack:///./dist/commonjs/proteus/util/ArrayUtil.js","webpack:///./~/cbor-codec/build/cbor/BaseError.js","webpack:///./dist/commonjs/proteus/session/RecvChain.js","webpack:///./dist/commonjs/proteus/session/RootKey.js","webpack:///./dist/commonjs/proteus/session/SendChain.js","webpack:///./dist/commonjs/proteus/session/SessionState.js","webpack:///./dist/commonjs/proteus/util/KeyDerivationUtil.js","webpack:///./dist/commonjs/proteus/util/RandomUtil.js","webpack:///./~/cbor-codec/build/cbor/Decoder.js","webpack:///./~/cbor-codec/build/cbor/Encoder.js","webpack:///./dist/commonjs/proteus.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA,YAAI;AACJ;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC9DA;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACpBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,CAAC;;;;;;;AClCD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,CAAC;;;;;;;ACvBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;ACVD;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;AC1ED;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACpGD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACnBD;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACtED;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;AC/FD;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACvFD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH;;AAEA,CAAC;;;;;;;ACtDD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH;;AAEA,CAAC;;;;;;;AClGD;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACvFD;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,mCAAmC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;AC/GD;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH;;AAEA;;AAEA,CAAC;;;;;;;ACxDD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACzFD;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACvED;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gCAAgC,uBAAuB,iBAAiB;AAC/G;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACzHD;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;AC7ID;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACnFD;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACtED;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;AC7CD;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACpDD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;AChCD;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACpGD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;ACRD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACnBD;AACA;AACA;AACA,4CAA4C,iCAAiC,OAAO,OAAO,6CAA6C,EAAE,WAAW;;AAErJ;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,mCAAmC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH;;AAEA,CAAC;;;;;;;AC9XD;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACxFD;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,CAAC;;;;;;;AC/GD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACnBD;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gCAAgC;AACpE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,uCAAuC,gCAAgC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACvJD;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;AClFD;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACjED;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;AC/OD;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,gCAAgC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,CAAC;;;;;;;AClED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH,CAAC;;;;;;;AC5BD;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;AC5eD;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;;;ACtVD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA,CAAC","file":"proteus.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 40);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7390dba76703bfca1f36","// Generated by CoffeeScript 1.11.1\n(function() {\n  var DontCallConstructor, ProteusError,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  ProteusError = require('./ProteusError');\n\n  module.exports = DontCallConstructor = (function(superClass) {\n    extend(DontCallConstructor, superClass);\n\n    function DontCallConstructor(_instance) {\n      this._instance = _instance;\n      DontCallConstructor.__super__.constructor.call(this, \"Instead of 'new \" + this._instance.constructor.name + \"', use '\" + this._instance.constructor.name + \".new'.\");\n    }\n\n    return DontCallConstructor;\n\n  })(ProteusError);\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/errors/DontCallConstructor.js\n// module id = 0\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  module.exports = (function() {\n    return {\n      assert_is_instance: function(classes, inst) {\n        var valid_types;\n        if (!Array.isArray(classes)) {\n          classes = [classes];\n        }\n        if (classes.some(function(k) {\n          return inst instanceof k || (inst && inst.prototype instanceof k);\n        })) {\n          return;\n        }\n        valid_types = classes.map(function(k) {\n          return \"'\" + k.name + \"'\";\n        }).join(' or ');\n        if (inst) {\n          throw TypeError(\"Expected one of \" + valid_types + \", got '\" + inst.constructor.name + \"'.\");\n        }\n        throw TypeError(\"Expected one of \" + valid_types + \", got '\" + (String(inst)) + \"'.\");\n      },\n      assert_is_integer: function(inst) {\n        if (Number.isInteger(inst)) {\n          return;\n        }\n        if (inst) {\n          throw new TypeError(\"Expected integer, got '\" + inst.constructor.name + \"'.\");\n        }\n        throw new TypeError(\"Expected integer, got '\" + (String(inst)) + \"'.\");\n      }\n    };\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/util/TypeUtil.js\n// module id = 1\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var DontCallConstructor;\n\n  DontCallConstructor = require('../errors/DontCallConstructor');\n\n  module.exports = (function() {\n    return {\n      new_instance: function(klass) {\n        var e;\n        try {\n          return new klass;\n        } catch (error) {\n          e = error;\n          if (!(e instanceof DontCallConstructor)) {\n            throw e;\n          }\n          return e._instance;\n        }\n      }\n    };\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/util/ClassUtil.js\n// module id = 2\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  module.exports = {\n    BaseError: require('./cbor/BaseError'),\n    DecodeError: require('./cbor/DecodeError'),\n    Decoder: require('./cbor/Decoder'),\n    Encoder: require('./cbor/Encoder'),\n    Types: require('./cbor/Types')\n  };\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/cbor-codec/build/cbor.js\n// module id = 3\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var CBOR, ClassUtil, DontCallConstructor, PublicKey, TypeUtil;\n\n  CBOR = require('cbor-codec');\n\n  DontCallConstructor = require('../errors/DontCallConstructor');\n\n  ClassUtil = require('../util/ClassUtil');\n\n  TypeUtil = require('../util/TypeUtil');\n\n  module.exports = PublicKey = (function() {\n    function PublicKey() {\n      throw new DontCallConstructor(this);\n    }\n\n    PublicKey[\"new\"] = function(pub_edward, pub_curve) {\n      var pk;\n      TypeUtil.assert_is_instance(Uint8Array, pub_edward);\n      TypeUtil.assert_is_instance(Uint8Array, pub_curve);\n      pk = ClassUtil.new_instance(PublicKey);\n      pk.pub_edward = pub_edward;\n      pk.pub_curve = pub_curve;\n      return pk;\n    };\n\n\n    /*\n    This function can be used to verify a message signature.\n    \n    @param signature [Uint8Array] The signature to verify\n    @param message [String, Uint8Array] The message from which the signature was computed.\n    @return [bool] `true` if the signature is valid, `false` otherwise.\n     */\n\n    PublicKey.prototype.verify = function(signature, message) {\n      TypeUtil.assert_is_instance(Uint8Array, signature);\n      return sodium.crypto_sign_verify_detached(signature, message, this.pub_edward);\n    };\n\n    PublicKey.prototype.fingerprint = function() {\n      return sodium.to_hex(this.pub_edward);\n    };\n\n    PublicKey.prototype.encode = function(e) {\n      e.object(1);\n      e.u8(0);\n      return e.bytes(this.pub_edward);\n    };\n\n    PublicKey.decode = function(d) {\n      var i, nprops, ref, self;\n      TypeUtil.assert_is_instance(CBOR.Decoder, d);\n      self = ClassUtil.new_instance(PublicKey);\n      nprops = d.object();\n      for (i = 0, ref = nprops - 1; 0 <= ref ? i <= ref : i >= ref; 0 <= ref ? i++ : i--) {\n        switch (d.u8()) {\n          case 0:\n            self.pub_edward = new Uint8Array(d.bytes());\n            break;\n          default:\n            d.skip();\n        }\n      }\n      TypeUtil.assert_is_instance(Uint8Array, self.pub_edward);\n      self.pub_curve = sodium.crypto_sign_ed25519_pk_to_curve25519(self.pub_edward);\n      return self;\n    };\n\n    return PublicKey;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/keys/PublicKey.js\n// module id = 4\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var CBOR, ClassUtil, DontCallConstructor, KeyPair, PublicKey, SecretKey, TypeUtil;\n\n  CBOR = require('cbor-codec');\n\n  DontCallConstructor = require('../errors/DontCallConstructor');\n\n  ClassUtil = require('../util/ClassUtil');\n\n  TypeUtil = require('../util/TypeUtil');\n\n  PublicKey = require('./PublicKey');\n\n  SecretKey = require('./SecretKey');\n\n\n  /*\n  Construct an ephemeral key pair.\n   */\n\n  module.exports = KeyPair = (function() {\n    function KeyPair() {\n      throw new DontCallConstructor(this);\n    }\n\n    KeyPair[\"new\"] = function() {\n      var ed25519_key_pair, kp;\n      ed25519_key_pair = sodium.crypto_sign_keypair();\n      kp = ClassUtil.new_instance(KeyPair);\n      kp.secret_key = KeyPair.prototype._construct_private_key(ed25519_key_pair);\n      kp.public_key = KeyPair.prototype._construct_public_key(ed25519_key_pair);\n      return kp;\n    };\n\n\n    /*\n    @note Ed25519 keys can be converted to Curve25519 keys, so that the same key pair can be used both for authenticated encryption (crypto_box) and for signatures (crypto_sign).\n    @param ed25519_key_pair [Object] Key pair based on Edwards-curve (Ed25519)\n    @option ed25519_key_pair [Uint8Array[32]] publicKey\n    @option ed25519_key_pair [Uint8Array[64]] privateKey\n    @option ed25519_key_pair [String] keyType\n    @return [Proteus.keys.SecretKey] Constructed private key\n    @see https://download.libsodium.org/doc/advanced/ed25519-curve25519.html\n     */\n\n    KeyPair.prototype._construct_private_key = function(ed25519_key_pair) {\n      var sk_curve25519, sk_ed25519;\n      sk_ed25519 = ed25519_key_pair.privateKey;\n      sk_curve25519 = sodium.crypto_sign_ed25519_sk_to_curve25519(sk_ed25519);\n      return SecretKey[\"new\"](sk_ed25519, sk_curve25519);\n    };\n\n\n    /*\n    @param ed25519_key_pair [libsodium.KeyPair] Key pair based on Edwards-curve (Ed25519)\n    @return [Proteus.keys.PublicKey] Constructed public key\n     */\n\n    KeyPair.prototype._construct_public_key = function(ed25519_key_pair) {\n      var pk_curve25519, pk_ed25519;\n      pk_ed25519 = ed25519_key_pair.publicKey;\n      pk_curve25519 = sodium.crypto_sign_ed25519_pk_to_curve25519(pk_ed25519);\n      return PublicKey[\"new\"](pk_ed25519, pk_curve25519);\n    };\n\n    KeyPair.prototype.encode = function(e) {\n      e.object(2);\n      e.u8(0);\n      this.secret_key.encode(e);\n      e.u8(1);\n      return this.public_key.encode(e);\n    };\n\n    KeyPair.decode = function(d) {\n      var i, nprops, ref, self;\n      TypeUtil.assert_is_instance(CBOR.Decoder, d);\n      self = ClassUtil.new_instance(KeyPair);\n      nprops = d.object();\n      for (i = 0, ref = nprops - 1; 0 <= ref ? i <= ref : i >= ref; 0 <= ref ? i++ : i--) {\n        switch (d.u8()) {\n          case 0:\n            self.secret_key = SecretKey.decode(d);\n            break;\n          case 1:\n            self.public_key = PublicKey.decode(d);\n            break;\n          default:\n            d.skip();\n        }\n      }\n      TypeUtil.assert_is_instance(SecretKey, self.secret_key);\n      TypeUtil.assert_is_instance(PublicKey, self.public_key);\n      return self;\n    };\n\n    return KeyPair;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/keys/KeyPair.js\n// module id = 5\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var ProteusError;\n\n  module.exports = ProteusError = (function() {\n    function ProteusError(message) {\n      this.name = this.constructor.name;\n      this.message = message;\n      this.stack = (new Error).stack;\n    }\n\n    ProteusError.prototype = new Error;\n\n    ProteusError.prototype.constructor = ProteusError;\n\n    return ProteusError;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/errors/ProteusError.js\n// module id = 6\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var CBOR, ClassUtil, DontCallConstructor, IdentityKey, PublicKey, TypeUtil;\n\n  CBOR = require('cbor-codec');\n\n  DontCallConstructor = require('../errors/DontCallConstructor');\n\n  ClassUtil = require('../util/ClassUtil');\n\n  TypeUtil = require('../util/TypeUtil');\n\n  PublicKey = require('./PublicKey');\n\n\n  /*\n  Construct a long-term identity key pair.\n  \n  Every client has a long-term identity key pair.\n  Long-term identity keys are used to initialise “sessions” with other clients (triple DH).\n   */\n\n  module.exports = IdentityKey = (function() {\n    function IdentityKey() {\n      throw new DontCallConstructor(this);\n    }\n\n    IdentityKey[\"new\"] = function(public_key) {\n      var key;\n      TypeUtil.assert_is_instance(PublicKey, public_key);\n      key = ClassUtil.new_instance(IdentityKey);\n      key.public_key = public_key;\n      return key;\n    };\n\n    IdentityKey.prototype.fingerprint = function() {\n      return this.public_key.fingerprint();\n    };\n\n    IdentityKey.prototype.toString = function() {\n      return sodium.to_hex(this.public_key);\n    };\n\n    IdentityKey.prototype.encode = function(e) {\n      e.object(1);\n      e.u8(0);\n      return this.public_key.encode(e);\n    };\n\n    IdentityKey.decode = function(d) {\n      var i, nprops, public_key, ref;\n      TypeUtil.assert_is_instance(CBOR.Decoder, d);\n      public_key = null;\n      nprops = d.object();\n      for (i = 0, ref = nprops - 1; 0 <= ref ? i <= ref : i >= ref; 0 <= ref ? i++ : i--) {\n        switch (d.u8()) {\n          case 0:\n            public_key = PublicKey.decode(d);\n            break;\n          default:\n            d.skip();\n        }\n      }\n      return IdentityKey[\"new\"](public_key);\n    };\n\n    return IdentityKey;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/keys/IdentityKey.js\n// module id = 7\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var CBOR, CipherMessage, ClassUtil, DontCallConstructor, Message, PublicKey, SessionTag, TypeUtil,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  CBOR = require('cbor-codec');\n\n  DontCallConstructor = require('../errors/DontCallConstructor');\n\n  ClassUtil = require('../util/ClassUtil');\n\n  TypeUtil = require('../util/TypeUtil');\n\n  PublicKey = require('../keys/PublicKey');\n\n  Message = require('./Message');\n\n  SessionTag = require('./SessionTag');\n\n  module.exports = CipherMessage = (function(superClass) {\n    extend(CipherMessage, superClass);\n\n    function CipherMessage() {\n      throw new DontCallConstructor(this);\n    }\n\n    CipherMessage[\"new\"] = function(session_tag, counter, prev_counter, ratchet_key, cipher_text) {\n      var cm;\n      TypeUtil.assert_is_instance(SessionTag, session_tag);\n      TypeUtil.assert_is_integer(counter);\n      TypeUtil.assert_is_integer(prev_counter);\n      TypeUtil.assert_is_instance(PublicKey, ratchet_key);\n      TypeUtil.assert_is_instance(Uint8Array, cipher_text);\n      cm = ClassUtil.new_instance(CipherMessage);\n      cm.session_tag = session_tag;\n      cm.counter = counter;\n      cm.prev_counter = prev_counter;\n      cm.ratchet_key = ratchet_key;\n      cm.cipher_text = cipher_text;\n      Object.freeze(cm);\n      return cm;\n    };\n\n    CipherMessage.prototype.encode = function(e) {\n      e.object(5);\n      e.u8(0);\n      this.session_tag.encode(e);\n      e.u8(1);\n      e.u32(this.counter);\n      e.u8(2);\n      e.u32(this.prev_counter);\n      e.u8(3);\n      this.ratchet_key.encode(e);\n      e.u8(4);\n      return e.bytes(this.cipher_text);\n    };\n\n    CipherMessage.decode = function(d) {\n      var cipher_text, counter, i, nprops, prev_counter, ratchet_key, ref, session_tag;\n      TypeUtil.assert_is_instance(CBOR.Decoder, d);\n      session_tag = null;\n      counter = null;\n      prev_counter = null;\n      ratchet_key = null;\n      cipher_text = null;\n      nprops = d.object();\n      for (i = 0, ref = nprops - 1; 0 <= ref ? i <= ref : i >= ref; 0 <= ref ? i++ : i--) {\n        switch (d.u8()) {\n          case 0:\n            session_tag = SessionTag.decode(d);\n            break;\n          case 1:\n            counter = d.u32();\n            break;\n          case 2:\n            prev_counter = d.u32();\n            break;\n          case 3:\n            ratchet_key = PublicKey.decode(d);\n            break;\n          case 4:\n            cipher_text = new Uint8Array(d.bytes());\n            break;\n          default:\n            d.skip();\n        }\n      }\n      return CipherMessage[\"new\"](session_tag, counter, prev_counter, ratchet_key, cipher_text);\n    };\n\n    return CipherMessage;\n\n  })(Message);\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/message/CipherMessage.js\n// module id = 8\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var CBOR, ChainKey, ClassUtil, DerivedSecrets, DontCallConstructor, MacKey, MessageKeys, TypeUtil;\n\n  CBOR = require('cbor-codec');\n\n  DontCallConstructor = require('../errors/DontCallConstructor');\n\n  ClassUtil = require('../util/ClassUtil');\n\n  TypeUtil = require('../util/TypeUtil');\n\n  MacKey = require('../derived/MacKey');\n\n  DerivedSecrets = require('../derived/DerivedSecrets');\n\n  MessageKeys = require('./MessageKeys');\n\n  module.exports = ChainKey = (function() {\n    function ChainKey() {\n      throw new DontCallConstructor(this);\n    }\n\n\n    /*\n    @param key [Proteus.derived.MacKey] Mac Key generated by derived secrets\n     */\n\n    ChainKey.from_mac_key = function(key, counter) {\n      var ck;\n      TypeUtil.assert_is_instance(MacKey, key);\n      TypeUtil.assert_is_integer(counter);\n      ck = ClassUtil.new_instance(ChainKey);\n      ck.key = key;\n      ck.idx = counter;\n      return ck;\n    };\n\n    ChainKey.prototype.next = function() {\n      var ck;\n      ck = ClassUtil.new_instance(ChainKey);\n      ck.key = MacKey[\"new\"](this.key.sign('1'));\n      ck.idx = this.idx + 1;\n      return ck;\n    };\n\n    ChainKey.prototype.message_keys = function() {\n      var base, dsecs;\n      base = this.key.sign('0');\n      dsecs = DerivedSecrets.kdf_without_salt(base, 'hash_ratchet');\n      return MessageKeys[\"new\"](dsecs.cipher_key, dsecs.mac_key, this.idx);\n    };\n\n    ChainKey.prototype.encode = function(e) {\n      e.object(2);\n      e.u8(0);\n      this.key.encode(e);\n      e.u8(1);\n      return e.u32(this.idx);\n    };\n\n    ChainKey.decode = function(d) {\n      var i, nprops, ref, self;\n      TypeUtil.assert_is_instance(CBOR.Decoder, d);\n      self = ClassUtil.new_instance(ChainKey);\n      nprops = d.object();\n      for (i = 0, ref = nprops - 1; 0 <= ref ? i <= ref : i >= ref; 0 <= ref ? i++ : i--) {\n        switch (d.u8()) {\n          case 0:\n            self.key = MacKey.decode(d);\n            break;\n          case 1:\n            self.idx = d.u32();\n            break;\n          default:\n            d.skip();\n        }\n      }\n      TypeUtil.assert_is_instance(MacKey, self.key);\n      TypeUtil.assert_is_integer(self.idx);\n      return self;\n    };\n\n    return ChainKey;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/session/ChainKey.js\n// module id = 9\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var DecodeError, ProteusError,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  ProteusError = require('./ProteusError');\n\n  DecodeError = (function(superClass) {\n    extend(DecodeError, superClass);\n\n    function DecodeError(message) {\n      this.message = message != null ? message : 'Unknown decoding error';\n    }\n\n    return DecodeError;\n\n  })(ProteusError);\n\n  DecodeError.InvalidType = (function(superClass) {\n    extend(InvalidType, superClass);\n\n    function InvalidType(message) {\n      this.message = message != null ? message : 'Invalid type';\n    }\n\n    return InvalidType;\n\n  })(DecodeError);\n\n  DecodeError.InvalidArrayLen = (function(superClass) {\n    extend(InvalidArrayLen, superClass);\n\n    function InvalidArrayLen(message) {\n      this.message = message != null ? message : 'Invalid array length';\n    }\n\n    return InvalidArrayLen;\n\n  })(DecodeError);\n\n  DecodeError.LocalIdentityChanged = (function(superClass) {\n    extend(LocalIdentityChanged, superClass);\n\n    function LocalIdentityChanged(message) {\n      this.message = message != null ? message : 'Local identity changed';\n    }\n\n    return LocalIdentityChanged;\n\n  })(DecodeError);\n\n  module.exports = DecodeError;\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/errors/DecodeError.js\n// module id = 10\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var DecryptError, ProteusError,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  ProteusError = require('./ProteusError');\n\n  DecryptError = (function(superClass) {\n    extend(DecryptError, superClass);\n\n    function DecryptError(message) {\n      this.message = message != null ? message : 'Unknown decryption error';\n    }\n\n    return DecryptError;\n\n  })(ProteusError);\n\n  DecryptError.RemoteIdentityChanged = (function(superClass) {\n    extend(RemoteIdentityChanged, superClass);\n\n    function RemoteIdentityChanged(message) {\n      this.message = message != null ? message : 'Remote identity changed';\n    }\n\n    return RemoteIdentityChanged;\n\n  })(DecryptError);\n\n  DecryptError.InvalidSignature = (function(superClass) {\n    extend(InvalidSignature, superClass);\n\n    function InvalidSignature(message) {\n      this.message = message != null ? message : 'Invalid signature';\n    }\n\n    return InvalidSignature;\n\n  })(DecryptError);\n\n  DecryptError.InvalidMessage = (function(superClass) {\n    extend(InvalidMessage, superClass);\n\n    function InvalidMessage(message) {\n      this.message = message != null ? message : 'Invalid message';\n    }\n\n    return InvalidMessage;\n\n  })(DecryptError);\n\n  DecryptError.DuplicateMessage = (function(superClass) {\n    extend(DuplicateMessage, superClass);\n\n    function DuplicateMessage(message) {\n      this.message = message != null ? message : 'Duplicate message';\n    }\n\n    return DuplicateMessage;\n\n  })(DecryptError);\n\n  DecryptError.TooDistantFuture = (function(superClass) {\n    extend(TooDistantFuture, superClass);\n\n    function TooDistantFuture(message) {\n      this.message = message != null ? message : 'Message is from too distant in the future';\n    }\n\n    return TooDistantFuture;\n\n  })(DecryptError);\n\n  DecryptError.OutdatedMessage = (function(superClass) {\n    extend(OutdatedMessage, superClass);\n\n    function OutdatedMessage(message) {\n      this.message = message != null ? message : 'Outdated message';\n    }\n\n    return OutdatedMessage;\n\n  })(DecryptError);\n\n  DecryptError.PrekeyNotFound = (function(superClass) {\n    extend(PrekeyNotFound, superClass);\n\n    function PrekeyNotFound(message) {\n      this.message = message != null ? message : 'Pre-key not found';\n    }\n\n    return PrekeyNotFound;\n\n  })(DecryptError);\n\n  module.exports = DecryptError;\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/errors/DecryptError.js\n// module id = 11\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var CBOR, ClassUtil, DontCallConstructor, IdentityKey, IdentityKeyPair, KeyPair, SecretKey, TypeUtil;\n\n  CBOR = require('cbor-codec');\n\n  DontCallConstructor = require('../errors/DontCallConstructor');\n\n  ClassUtil = require('../util/ClassUtil');\n\n  TypeUtil = require('../util/TypeUtil');\n\n  IdentityKey = require('./IdentityKey');\n\n  SecretKey = require('./SecretKey');\n\n  KeyPair = require('./KeyPair');\n\n  module.exports = IdentityKeyPair = (function() {\n    function IdentityKeyPair() {\n      throw new DontCallConstructor(this);\n    }\n\n    IdentityKeyPair[\"new\"] = function() {\n      var ikp, key_pair;\n      key_pair = KeyPair[\"new\"]();\n      ikp = ClassUtil.new_instance(IdentityKeyPair);\n      ikp.version = 1;\n      ikp.secret_key = key_pair.secret_key;\n      ikp.public_key = IdentityKey[\"new\"](key_pair.public_key);\n      return ikp;\n    };\n\n    IdentityKeyPair.prototype.serialise = function() {\n      var e;\n      e = new CBOR.Encoder();\n      this.encode(e);\n      return e.get_buffer();\n    };\n\n    IdentityKeyPair.deserialise = function(buf) {\n      var d;\n      TypeUtil.assert_is_instance(ArrayBuffer, buf);\n      d = new CBOR.Decoder(buf);\n      return IdentityKeyPair.decode(d);\n    };\n\n    IdentityKeyPair.prototype.encode = function(e) {\n      e.object(3);\n      e.u8(0);\n      e.u8(this.version);\n      e.u8(1);\n      this.secret_key.encode(e);\n      e.u8(2);\n      return this.public_key.encode(e);\n    };\n\n    IdentityKeyPair.decode = function(d) {\n      var i, nprops, ref, self;\n      TypeUtil.assert_is_instance(CBOR.Decoder, d);\n      self = ClassUtil.new_instance(IdentityKeyPair);\n      nprops = d.object();\n      for (i = 0, ref = nprops - 1; 0 <= ref ? i <= ref : i >= ref; 0 <= ref ? i++ : i--) {\n        switch (d.u8()) {\n          case 0:\n            self.version = d.u8();\n            break;\n          case 1:\n            self.secret_key = SecretKey.decode(d);\n            break;\n          case 2:\n            self.public_key = IdentityKey.decode(d);\n            break;\n          default:\n            d.skip();\n        }\n      }\n      TypeUtil.assert_is_integer(self.version);\n      TypeUtil.assert_is_instance(SecretKey, self.secret_key);\n      TypeUtil.assert_is_instance(IdentityKey, self.public_key);\n      return self;\n    };\n\n    return IdentityKeyPair;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/keys/IdentityKeyPair.js\n// module id = 12\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var CBOR, ClassUtil, DontCallConstructor, Envelope, MacKey, Message, TypeUtil;\n\n  CBOR = require('cbor-codec');\n\n  DontCallConstructor = require('../errors/DontCallConstructor');\n\n  ClassUtil = require('../util/ClassUtil');\n\n  TypeUtil = require('../util/TypeUtil');\n\n  MacKey = require('../derived/MacKey');\n\n  Message = require('./Message');\n\n  module.exports = Envelope = (function() {\n    function Envelope() {\n      throw new DontCallConstructor(this);\n    }\n\n    Envelope[\"new\"] = function(mac_key, message) {\n      var env, message_enc;\n      TypeUtil.assert_is_instance(MacKey, mac_key);\n      TypeUtil.assert_is_instance(Message, message);\n      message_enc = new Uint8Array(message.serialise());\n      env = ClassUtil.new_instance(Envelope);\n      env.version = 1;\n      env.mac = mac_key.sign(message_enc);\n      env.message = message;\n      env._message_enc = message_enc;\n      Object.freeze(env);\n      return env;\n    };\n\n    Envelope.prototype.verify = function(mac_key) {\n      TypeUtil.assert_is_instance(MacKey, mac_key);\n      return mac_key.verify(this.mac, this._message_enc);\n    };\n\n\n    /*\n    @return [ArrayBuffer] The serialized message envelope\n     */\n\n    Envelope.prototype.serialise = function() {\n      var e;\n      e = new CBOR.Encoder();\n      this.encode(e);\n      return e.get_buffer();\n    };\n\n    Envelope.deserialise = function(buf) {\n      var d;\n      TypeUtil.assert_is_instance(ArrayBuffer, buf);\n      d = new CBOR.Decoder(buf);\n      return Envelope.decode(d);\n    };\n\n    Envelope.prototype.encode = function(e) {\n      e.object(3);\n      e.u8(0);\n      e.u8(this.version);\n      e.u8(1);\n      e.object(1);\n      e.u8(0);\n      e.bytes(this.mac);\n      e.u8(2);\n      return e.bytes(this._message_enc);\n    };\n\n    Envelope.decode = function(d) {\n      var env, i, j, nprops, nprops_mac, ref, ref1;\n      TypeUtil.assert_is_instance(CBOR.Decoder, d);\n      env = ClassUtil.new_instance(Envelope);\n      nprops = d.object();\n      for (i = 0, ref = nprops - 1; 0 <= ref ? i <= ref : i >= ref; 0 <= ref ? i++ : i--) {\n        switch (d.u8()) {\n          case 0:\n            env.version = d.u8();\n            break;\n          case 1:\n            nprops_mac = d.object();\n            for (j = 0, ref1 = nprops_mac - 1; 0 <= ref1 ? j <= ref1 : j >= ref1; 0 <= ref1 ? j++ : j--) {\n              switch (d.u8()) {\n                case 0:\n                  env.mac = new Uint8Array(d.bytes());\n                  break;\n                default:\n                  d.skip();\n              }\n            }\n            break;\n          case 2:\n            env._message_enc = new Uint8Array(d.bytes());\n            break;\n          default:\n            d.skip();\n        }\n      }\n      TypeUtil.assert_is_integer(env.version);\n      TypeUtil.assert_is_instance(Uint8Array, env.mac);\n      env.message = Message.deserialise(env._message_enc.buffer);\n      Object.freeze(env);\n      return env;\n    };\n\n    return Envelope;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/message/Envelope.js\n// module id = 13\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var CBOR, CipherMessage, DecodeError, DontCallConstructor, Message, PreKeyMessage, TypeUtil;\n\n  CBOR = require('cbor-codec');\n\n  DontCallConstructor = require('../errors/DontCallConstructor');\n\n  TypeUtil = require('../util/TypeUtil');\n\n  DecodeError = require('../errors/DecodeError');\n\n  module.exports = Message = (function() {\n    function Message() {\n      throw new DontCallConstructor(this);\n    }\n\n    Message.prototype.serialise = function() {\n      var e;\n      e = new CBOR.Encoder();\n      switch (false) {\n        case !(this instanceof CipherMessage):\n          e.u8(1);\n          break;\n        case !(this instanceof PreKeyMessage):\n          e.u8(2);\n          break;\n        default:\n          throw new TypeError('Unexpected message type');\n      }\n      this.encode(e);\n      return e.get_buffer();\n    };\n\n    Message.deserialise = function(buf) {\n      var d;\n      TypeUtil.assert_is_instance(ArrayBuffer, buf);\n      d = new CBOR.Decoder(buf);\n      switch (d.u8()) {\n        case 1:\n          return CipherMessage.decode(d);\n        case 2:\n          return PreKeyMessage.decode(d);\n        default:\n          throw new DecodeError.InvalidType('Unrecognised message type');\n      }\n    };\n\n    return Message;\n\n  })();\n\n  CipherMessage = require('./CipherMessage');\n\n  PreKeyMessage = require('./PreKeyMessage');\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/message/Message.js\n// module id = 14\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var CBOR, CipherMessage, ClassUtil, DontCallConstructor, IdentityKey, Message, PreKeyMessage, PublicKey, TypeUtil,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  CBOR = require('cbor-codec');\n\n  DontCallConstructor = require('../errors/DontCallConstructor');\n\n  ClassUtil = require('../util/ClassUtil');\n\n  TypeUtil = require('../util/TypeUtil');\n\n  PublicKey = require('../keys/PublicKey');\n\n  IdentityKey = require('../keys/IdentityKey');\n\n  Message = require('./Message');\n\n  CipherMessage = require('./CipherMessage');\n\n  module.exports = PreKeyMessage = (function(superClass) {\n    extend(PreKeyMessage, superClass);\n\n    function PreKeyMessage() {\n      throw new DontCallConstructor(this);\n    }\n\n    PreKeyMessage[\"new\"] = function(prekey_id, base_key, identity_key, message) {\n      var pkm;\n      TypeUtil.assert_is_integer(prekey_id);\n      TypeUtil.assert_is_instance(PublicKey, base_key);\n      TypeUtil.assert_is_instance(IdentityKey, identity_key);\n      TypeUtil.assert_is_instance(CipherMessage, message);\n      pkm = ClassUtil.new_instance(PreKeyMessage);\n      pkm.prekey_id = prekey_id;\n      pkm.base_key = base_key;\n      pkm.identity_key = identity_key;\n      pkm.message = message;\n      Object.freeze(pkm);\n      return pkm;\n    };\n\n    PreKeyMessage.prototype.encode = function(e) {\n      e.object(4);\n      e.u8(0);\n      e.u16(this.prekey_id);\n      e.u8(1);\n      this.base_key.encode(e);\n      e.u8(2);\n      this.identity_key.encode(e);\n      e.u8(3);\n      return this.message.encode(e);\n    };\n\n    PreKeyMessage.decode = function(d) {\n      var base_key, i, identity_key, message, nprops, prekey_id, ref;\n      TypeUtil.assert_is_instance(CBOR.Decoder, d);\n      prekey_id = null;\n      base_key = null;\n      identity_key = null;\n      message = null;\n      nprops = d.object();\n      for (i = 0, ref = nprops - 1; 0 <= ref ? i <= ref : i >= ref; 0 <= ref ? i++ : i--) {\n        switch (d.u8()) {\n          case 0:\n            prekey_id = d.u16();\n            break;\n          case 1:\n            base_key = PublicKey.decode(d);\n            break;\n          case 2:\n            identity_key = IdentityKey.decode(d);\n            break;\n          case 3:\n            message = CipherMessage.decode(d);\n            break;\n          default:\n            d.skip();\n        }\n      }\n      return PreKeyMessage[\"new\"](prekey_id, base_key, identity_key, message);\n    };\n\n    return PreKeyMessage;\n\n  })(Message);\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/message/PreKeyMessage.js\n// module id = 15\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var CBOR, ClassUtil, DontCallConstructor, MacKey, TypeUtil;\n\n  CBOR = require('cbor-codec');\n\n  DontCallConstructor = require('../errors/DontCallConstructor');\n\n  ClassUtil = require('../util/ClassUtil');\n\n  TypeUtil = require('../util/TypeUtil');\n\n  module.exports = MacKey = (function() {\n    function MacKey() {\n      throw new DontCallConstructor(this);\n    }\n\n\n    /*\n    key: mac::Key\n    @param key [Uint8Array] Mac Key in byte array format generated by derived secrets\n     */\n\n    MacKey[\"new\"] = function(key) {\n      var mk;\n      TypeUtil.assert_is_instance(Uint8Array, key);\n      mk = ClassUtil.new_instance(MacKey);\n      mk.key = key;\n      return mk;\n    };\n\n\n    /*\n    Hash-based message authentication code\n     */\n\n    MacKey.prototype.sign = function(msg) {\n      return sodium.crypto_auth_hmacsha256(msg, this.key);\n    };\n\n    MacKey.prototype.verify = function(signature, msg) {\n      return sodium.crypto_auth_hmacsha256_verify(signature, msg, this.key);\n    };\n\n    MacKey.prototype.encode = function(e) {\n      e.object(1);\n      e.u8(0);\n      return e.bytes(this.key);\n    };\n\n    MacKey.decode = function(d) {\n      var i, key_bytes, nprops, ref;\n      TypeUtil.assert_is_instance(CBOR.Decoder, d);\n      key_bytes = null;\n      nprops = d.object();\n      for (i = 0, ref = nprops - 1; 0 <= ref ? i <= ref : i >= ref; 0 <= ref ? i++ : i--) {\n        switch (d.u8()) {\n          case 0:\n            key_bytes = new Uint8Array(d.bytes());\n            break;\n          default:\n            d.skip();\n        }\n      }\n      return MacKey[\"new\"](key_bytes);\n    };\n\n    return MacKey;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/derived/MacKey.js\n// module id = 16\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var CBOR, ClassUtil, DontCallConstructor, KeyPair, PreKey, TypeUtil;\n\n  CBOR = require('cbor-codec');\n\n  DontCallConstructor = require('../errors/DontCallConstructor');\n\n  ClassUtil = require('../util/ClassUtil');\n\n  TypeUtil = require('../util/TypeUtil');\n\n  KeyPair = require('./KeyPair');\n\n\n  /*\n  Pre-generated (and regularly refreshed) pre-keys.\n  A Pre-Shared Key contains the public long-term identity and ephemeral handshake keys for the initial triple DH.\n   */\n\n  module.exports = PreKey = (function() {\n    PreKey.MAX_PREKEY_ID = 0xFFFF;\n\n    function PreKey() {\n      throw new DontCallConstructor(this);\n    }\n\n\n    /*\n    @param pre_key_id [Integer]\n     */\n\n    PreKey[\"new\"] = function(pre_key_id) {\n      var pk;\n      TypeUtil.assert_is_integer(pre_key_id);\n      if (pre_key_id < 0 || pre_key_id > PreKey.MAX_PREKEY_ID) {\n        throw new RangeError(\"pre_key_id must be between 0 and \" + PreKey.MAX_PREKEY_ID + \" inclusive\");\n      }\n      pk = ClassUtil.new_instance(PreKey);\n      pk.version = 1;\n      pk.key_id = pre_key_id;\n      pk.key_pair = KeyPair[\"new\"]();\n      return pk;\n    };\n\n    PreKey.last_resort = function() {\n      return PreKey[\"new\"](PreKey.MAX_PREKEY_ID);\n    };\n\n    PreKey.generate_prekeys = function(start, size) {\n      var check_integer, i, ref, results;\n      check_integer = function(value) {\n        TypeUtil.assert_is_integer(value);\n        if (value < 0 || value > PreKey.MAX_PREKEY_ID) {\n          throw new RangeError(\"Arguments must be between 0 and \" + PreKey.MAX_PREKEY_ID + \" inclusive\");\n        }\n      };\n      check_integer(start);\n      check_integer(size);\n      return (function() {\n        results = [];\n        for (var i = 0, ref = size - 1; 0 <= ref ? i <= ref : i >= ref; 0 <= ref ? i++ : i--){ results.push(i); }\n        return results;\n      }).apply(this).map(function(x) {\n        return PreKey[\"new\"]((start + x) % PreKey.MAX_PREKEY_ID);\n      });\n    };\n\n    PreKey.prototype.serialise = function() {\n      var e;\n      e = new CBOR.Encoder();\n      this.encode(e);\n      return e.get_buffer();\n    };\n\n    PreKey.deserialise = function(buf) {\n      TypeUtil.assert_is_instance(ArrayBuffer, buf);\n      return PreKey.decode(new CBOR.Decoder(buf));\n    };\n\n    PreKey.prototype.encode = function(e) {\n      TypeUtil.assert_is_instance(CBOR.Encoder, e);\n      e.object(3);\n      e.u8(0);\n      e.u8(this.version);\n      e.u8(1);\n      e.u16(this.key_id);\n      e.u8(2);\n      return this.key_pair.encode(e);\n    };\n\n    PreKey.decode = function(d) {\n      var i, nprops, ref, self;\n      TypeUtil.assert_is_instance(CBOR.Decoder, d);\n      self = ClassUtil.new_instance(PreKey);\n      nprops = d.object();\n      for (i = 0, ref = nprops - 1; 0 <= ref ? i <= ref : i >= ref; 0 <= ref ? i++ : i--) {\n        switch (d.u8()) {\n          case 0:\n            self.version = d.u8();\n            break;\n          case 1:\n            self.key_id = d.u16();\n            break;\n          case 2:\n            self.key_pair = KeyPair.decode(d);\n            break;\n          default:\n            d.skip();\n        }\n      }\n      TypeUtil.assert_is_integer(self.version);\n      TypeUtil.assert_is_integer(self.key_id);\n      TypeUtil.assert_is_instance(KeyPair, self.key_pair);\n      return self;\n    };\n\n    return PreKey;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/keys/PreKey.js\n// module id = 17\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var CBOR, ClassUtil, DontCallConstructor, IdentityKey, IdentityKeyPair, PreKey, PreKeyAuth, PreKeyBundle, PublicKey, TypeUtil;\n\n  CBOR = require('cbor-codec');\n\n  DontCallConstructor = require('../errors/DontCallConstructor');\n\n  ClassUtil = require('../util/ClassUtil');\n\n  TypeUtil = require('../util/TypeUtil');\n\n  IdentityKeyPair = require('./IdentityKeyPair');\n\n  IdentityKey = require('./IdentityKey');\n\n  PreKeyAuth = require('./PreKeyAuth');\n\n  PublicKey = require('./PublicKey');\n\n  PreKey = require('./PreKey');\n\n  module.exports = PreKeyBundle = (function() {\n    function PreKeyBundle() {\n      throw new DontCallConstructor(this);\n    }\n\n\n    /*\n    @param identity_key [Proteus.keys.IdentityKey]\n    @param prekey [Proteus.keys.PreKey]\n     */\n\n    PreKeyBundle[\"new\"] = function(identity_key, prekey) {\n      var bundle;\n      TypeUtil.assert_is_instance(IdentityKey, identity_key);\n      TypeUtil.assert_is_instance(PreKey, prekey);\n      bundle = ClassUtil.new_instance(PreKeyBundle);\n      bundle.version = 1;\n      bundle.prekey_id = prekey.key_id;\n      bundle.public_key = prekey.key_pair.public_key;\n      bundle.identity_key = identity_key;\n      bundle.signature = null;\n      return bundle;\n    };\n\n    PreKeyBundle.signed = function(identity_pair, prekey) {\n      var bundle, ratchet_key, signature;\n      TypeUtil.assert_is_instance(IdentityKeyPair, identity_pair);\n      TypeUtil.assert_is_instance(PreKey, prekey);\n      ratchet_key = prekey.key_pair.public_key;\n      signature = identity_pair.secret_key.sign(ratchet_key.pub_edward);\n      bundle = ClassUtil.new_instance(PreKeyBundle);\n      bundle.version = 1;\n      bundle.prekey_id = prekey.key_id;\n      bundle.public_key = ratchet_key;\n      bundle.identity_key = identity_pair.public_key;\n      bundle.signature = signature;\n      return bundle;\n    };\n\n    PreKeyBundle.prototype.verify = function() {\n      if (!this.signature) {\n        return PreKeyAuth.UNKNOWN;\n      }\n      if (this.identity_key.public_key.verify(this.signature, this.public_key.pub_edward)) {\n        return PreKeyAuth.VALID;\n      }\n      return PreKeyAuth.INVALID;\n    };\n\n    PreKeyBundle.prototype.serialise = function() {\n      var e;\n      e = new CBOR.Encoder();\n      this.encode(e);\n      return e.get_buffer();\n    };\n\n    PreKeyBundle.deserialise = function(buf) {\n      TypeUtil.assert_is_instance(ArrayBuffer, buf);\n      return PreKeyBundle.decode(new CBOR.Decoder(buf));\n    };\n\n    PreKeyBundle.prototype.encode = function(e) {\n      TypeUtil.assert_is_instance(CBOR.Encoder, e);\n      e.object(5);\n      e.u8(0);\n      e.u8(this.version);\n      e.u8(1);\n      e.u16(this.prekey_id);\n      e.u8(2);\n      this.public_key.encode(e);\n      e.u8(3);\n      this.identity_key.encode(e);\n      e.u8(4);\n      if (!this.signature) {\n        return e[\"null\"]();\n      } else {\n        return e.bytes(this.signature);\n      }\n    };\n\n    PreKeyBundle.decode = function(d) {\n      var i, nprops, ref, self;\n      TypeUtil.assert_is_instance(CBOR.Decoder, d);\n      self = ClassUtil.new_instance(PreKeyBundle);\n      nprops = d.object();\n      for (i = 0, ref = nprops - 1; 0 <= ref ? i <= ref : i >= ref; 0 <= ref ? i++ : i--) {\n        switch (d.u8()) {\n          case 0:\n            self.version = d.u8();\n            break;\n          case 1:\n            self.prekey_id = d.u16();\n            break;\n          case 2:\n            self.public_key = PublicKey.decode(d);\n            break;\n          case 3:\n            self.identity_key = IdentityKey.decode(d);\n            break;\n          case 4:\n            self.signature = d.optional(function() {\n              return new Uint8Array(d.bytes());\n            });\n            break;\n          default:\n            d.skip();\n        }\n      }\n      TypeUtil.assert_is_integer(self.version);\n      TypeUtil.assert_is_integer(self.prekey_id);\n      TypeUtil.assert_is_instance(PublicKey, self.public_key);\n      TypeUtil.assert_is_instance(IdentityKey, self.identity_key);\n      return self;\n    };\n\n    return PreKeyBundle;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/keys/PreKeyBundle.js\n// module id = 18\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var CBOR, ClassUtil, DontCallConstructor, PublicKey, SecretKey, TypeUtil;\n\n  CBOR = require('cbor-codec');\n\n  DontCallConstructor = require('../errors/DontCallConstructor');\n\n  ClassUtil = require('../util/ClassUtil');\n\n  TypeUtil = require('../util/TypeUtil');\n\n  PublicKey = require('./PublicKey');\n\n  module.exports = SecretKey = (function() {\n    function SecretKey() {\n      throw new DontCallConstructor(this);\n    }\n\n    SecretKey[\"new\"] = function(sec_edward, sec_curve) {\n      var sk;\n      TypeUtil.assert_is_instance(Uint8Array, sec_edward);\n      TypeUtil.assert_is_instance(Uint8Array, sec_curve);\n      sk = ClassUtil.new_instance(SecretKey);\n      sk.sec_edward = sec_edward;\n      sk.sec_curve = sec_curve;\n      return sk;\n    };\n\n\n    /*\n    This function can be used to compute a message signature.\n    \n    @param message [String, Uint8Array] Message to be signed\n    @return [Uint8Array] A message signature\n     */\n\n    SecretKey.prototype.sign = function(message) {\n      return sodium.crypto_sign_detached(message, this.sec_edward);\n    };\n\n\n    /*\n    This function can be used to compute a shared secret given a user's secret key and another user's public key.\n    \n    @param public_key [Proteus.keys.PublicKey] Another user's public key\n    @return [Uint8Array] Array buffer view of the computed shared secret\n     */\n\n    SecretKey.prototype.shared_secret = function(public_key) {\n      TypeUtil.assert_is_instance(PublicKey, public_key);\n      return sodium.crypto_scalarmult(this.sec_curve, public_key.pub_curve);\n    };\n\n    SecretKey.prototype.encode = function(e) {\n      e.object(1);\n      e.u8(0);\n      return e.bytes(this.sec_edward);\n    };\n\n    SecretKey.decode = function(d) {\n      var i, nprops, ref, self;\n      TypeUtil.assert_is_instance(CBOR.Decoder, d);\n      self = ClassUtil.new_instance(SecretKey);\n      nprops = d.object();\n      for (i = 0, ref = nprops - 1; 0 <= ref ? i <= ref : i >= ref; 0 <= ref ? i++ : i--) {\n        switch (d.u8()) {\n          case 0:\n            self.sec_edward = new Uint8Array(d.bytes());\n            break;\n          default:\n            d.skip();\n        }\n      }\n      TypeUtil.assert_is_instance(Uint8Array, self.sec_edward);\n      self.sec_curve = sodium.crypto_sign_ed25519_sk_to_curve25519(self.sec_edward);\n      return self;\n    };\n\n    return SecretKey;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/keys/SecretKey.js\n// module id = 19\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var CBOR, CipherKey, ClassUtil, DontCallConstructor, TypeUtil;\n\n  CBOR = require('cbor-codec');\n\n  DontCallConstructor = require('../errors/DontCallConstructor');\n\n  ClassUtil = require('../util/ClassUtil');\n\n  TypeUtil = require('../util/TypeUtil');\n\n  module.exports = CipherKey = (function() {\n    function CipherKey() {\n      throw new DontCallConstructor(this);\n    }\n\n    CipherKey[\"new\"] = function(key) {\n      var ck;\n      TypeUtil.assert_is_instance(Uint8Array, key);\n      ck = ClassUtil.new_instance(CipherKey);\n      ck.key = key;\n      return ck;\n    };\n\n\n    /*\n    @param plaintext [String, ArrayBuffer] The text to encrypt\n    @param nonce [Uint8Array] Counter as nonce\n    @return [Uint8Array] Encypted payload\n     */\n\n    CipherKey.prototype.encrypt = function(plaintext, nonce) {\n      if (plaintext instanceof ArrayBuffer && plaintext.byteLength !== void 0) {\n        plaintext = new Uint8Array(plaintext);\n      }\n      return sodium.crypto_stream_chacha20_xor(plaintext, nonce, this.key, 'uint8array');\n    };\n\n    CipherKey.prototype.decrypt = function(ciphertext, nonce) {\n      return this.encrypt(ciphertext, nonce);\n    };\n\n    CipherKey.prototype.encode = function(e) {\n      e.object(1);\n      e.u8(0);\n      return e.bytes(this.key);\n    };\n\n    CipherKey.decode = function(d) {\n      var i, key_bytes, nprops, ref;\n      TypeUtil.assert_is_instance(CBOR.Decoder, d);\n      key_bytes = null;\n      nprops = d.object();\n      for (i = 0, ref = nprops - 1; 0 <= ref ? i <= ref : i >= ref; 0 <= ref ? i++ : i--) {\n        switch (d.u8()) {\n          case 0:\n            key_bytes = new Uint8Array(d.bytes());\n            break;\n          default:\n            d.skip();\n        }\n      }\n      return CipherKey[\"new\"](key_bytes);\n    };\n\n    return CipherKey;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/derived/CipherKey.js\n// module id = 20\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var CipherKey, ClassUtil, DerivedSecrets, DontCallConstructor, KeyDerivationUtil, MacKey;\n\n  DontCallConstructor = require('../errors/DontCallConstructor');\n\n  ClassUtil = require('../util/ClassUtil');\n\n  KeyDerivationUtil = require('../util/KeyDerivationUtil');\n\n  CipherKey = require('./CipherKey');\n\n  MacKey = require('./MacKey');\n\n  module.exports = DerivedSecrets = (function() {\n    function DerivedSecrets() {\n      throw new DontCallConstructor(this);\n    }\n\n    DerivedSecrets.kdf = function(input, salt, info) {\n      var byte_length, cipher_key, ds, mac_key, okm;\n      byte_length = 64;\n      okm = KeyDerivationUtil.hkdf(salt, input, info, byte_length);\n      cipher_key = new Uint8Array(okm.buffer.slice(0, 32));\n      mac_key = new Uint8Array(okm.buffer.slice(32, 64));\n      ds = ClassUtil.new_instance(DerivedSecrets);\n      ds.cipher_key = CipherKey[\"new\"](cipher_key);\n      ds.mac_key = MacKey[\"new\"](mac_key);\n      return ds;\n    };\n\n\n    /*\n    @param input [Array<Integer>] Initial key material (usually the Master Key) in byte array format\n    @param info [String] Key Derivation Data\n     */\n\n    DerivedSecrets.kdf_without_salt = function(input, info) {\n      return this.kdf(input, new Uint8Array(0), info);\n    };\n\n    return DerivedSecrets;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/derived/DerivedSecrets.js\n// module id = 21\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var CBOR, ClassUtil, DecodeError, DontCallConstructor, RandomUtil, SessionTag, TypeUtil;\n\n  CBOR = require('cbor-codec');\n\n  DontCallConstructor = require('../errors/DontCallConstructor');\n\n  ClassUtil = require('../util/ClassUtil');\n\n  TypeUtil = require('../util/TypeUtil');\n\n  DecodeError = require('../errors/DecodeError');\n\n  RandomUtil = require('../util/RandomUtil');\n\n  module.exports = SessionTag = (function() {\n    function SessionTag() {\n      throw new DontCallConstructor(this);\n    }\n\n    SessionTag[\"new\"] = function() {\n      var st;\n      st = ClassUtil.new_instance(SessionTag);\n      st.tag = RandomUtil.random_bytes(16);\n      return st;\n    };\n\n    SessionTag.prototype.toString = function() {\n      return sodium.to_hex(this.tag);\n    };\n\n    SessionTag.prototype.encode = function(e) {\n      return e.bytes(this.tag);\n    };\n\n    SessionTag.decode = function(d) {\n      var bytes, st;\n      TypeUtil.assert_is_instance(CBOR.Decoder, d);\n      bytes = new Uint8Array(d.bytes());\n      if (bytes.byteLength !== 16) {\n        throw DecodeError.InvalidArrayLen(\"SessionTag should be 16 bytes, not \" + bytes.byteLength + \" bytes.\");\n      }\n      st = ClassUtil.new_instance(SessionTag);\n      st.tag = new Uint8Array(bytes);\n      return st;\n    };\n\n    return SessionTag;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/message/SessionTag.js\n// module id = 22\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var BaseError, DecodeError,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  BaseError = require('./BaseError');\n\n  module.exports = DecodeError = (function(superClass) {\n    extend(DecodeError, superClass);\n\n    DecodeError.prototype.INVALID_TYPE = 'Invalid type';\n\n    DecodeError.prototype.UNEXPECTED_EOF = 'Unexpected end-of-buffer';\n\n    DecodeError.prototype.UNEXPECTED_TYPE = 'Unexpected type';\n\n    DecodeError.prototype.INT_OVERFLOW = 'Integer overflow';\n\n    DecodeError.prototype.TOO_LONG = 'Field too long';\n\n    DecodeError.prototype.TOO_NESTED = 'Object nested too deep';\n\n    function DecodeError(message, extra) {\n      this.extra = extra;\n      DecodeError.__super__.constructor.call(this, message);\n    }\n\n    return DecodeError;\n\n  })(BaseError);\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/cbor-codec/build/cbor/DecodeError.js\n// module id = 23\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var Types;\n\n  module.exports = Types = (function() {\n    Types.prototype.ARRAY = 1;\n\n    Types.prototype.BOOL = 2;\n\n    Types.prototype.BREAK = 3;\n\n    Types.prototype.BYTES = 4;\n\n    Types.prototype.FLOAT16 = 5;\n\n    Types.prototype.FLOAT32 = 6;\n\n    Types.prototype.FLOAT64 = 7;\n\n    Types.prototype.UINT8 = 8;\n\n    Types.prototype.UINT16 = 9;\n\n    Types.prototype.UINT32 = 10;\n\n    Types.prototype.UINT64 = 11;\n\n    Types.prototype.INT8 = 12;\n\n    Types.prototype.INT16 = 13;\n\n    Types.prototype.INT32 = 14;\n\n    Types.prototype.INT64 = 15;\n\n    Types.prototype.NULL = 16;\n\n    Types.prototype.OBJECT = 17;\n\n    Types.prototype.TAGGED = 18;\n\n    Types.prototype.TEXT = 19;\n\n    Types.prototype.UNDEFINED = 20;\n\n    function Types() {\n      raise(new Error('Can\\'t create instance of singleton'));\n    }\n\n    Types.major = function(t) {\n      switch (t) {\n        case Types.prototype.ARRAY:\n          return 4;\n        case Types.prototype.BOOL:\n          return 7;\n        case Types.prototype.BREAK:\n          return 7;\n        case Types.prototype.BYTES:\n          return 2;\n        case Types.prototype.FLOAT16:\n          return 7;\n        case Types.prototype.FLOAT32:\n          return 7;\n        case Types.prototype.FLOAT64:\n          return 7;\n        case Types.prototype.UINT8:\n          return 0;\n        case Types.prototype.UINT16:\n          return 0;\n        case Types.prototype.UINT32:\n          return 0;\n        case Types.prototype.UINT64:\n          return 0;\n        case Types.prototype.INT8:\n          return 1;\n        case Types.prototype.INT16:\n          return 1;\n        case Types.prototype.INT32:\n          return 1;\n        case Types.prototype.INT64:\n          return 1;\n        case Types.prototype.NULL:\n          return 7;\n        case Types.prototype.OBJECT:\n          return 5;\n        case Types.prototype.TAGGED:\n          return 6;\n        case Types.prototype.TEXT:\n          return 3;\n        case Types.prototype.UNDEFINED:\n          return 7;\n        default:\n          return raise(TypeError('Invalid CBOR type'));\n      }\n    };\n\n    return Types;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/cbor-codec/build/cbor/Types.js\n// module id = 24\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  module.exports = {\n    INVALID: 'Invalid',\n    UNKNOWN: 'Unknown',\n    VALID: 'Valid'\n  };\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/keys/PreKeyAuth.js\n// module id = 25\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var PreKeyStore;\n\n  module.exports = PreKeyStore = (function() {\n    function PreKeyStore() {}\n\n    PreKeyStore.prototype.get_prekey = function(prekey_id) {\n      throw Error('Virtual function unimplemented');\n    };\n\n    PreKeyStore.prototype.remove = function(prekey_id) {\n      throw Error('Virtual function unimplemented');\n    };\n\n    return PreKeyStore;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/session/PreKeyStore.js\n// module id = 26\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var CBOR, ChainKey, CipherMessage, ClassUtil, DecodeError, DecryptError, DontCallConstructor, Envelope, IdentityKey, IdentityKeyPair, KeyPair, PreKey, PreKeyBundle, PreKeyMessage, PreKeyStore, ProteusError, PublicKey, Session, SessionState, SessionTag, TypeUtil,\n    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  CBOR = require('cbor-codec');\n\n  DontCallConstructor = require('../errors/DontCallConstructor');\n\n  ClassUtil = require('../util/ClassUtil');\n\n  TypeUtil = require('../util/TypeUtil');\n\n  ProteusError = require('../errors/ProteusError');\n\n  DecryptError = require('../errors/DecryptError');\n\n  DecodeError = require('../errors/DecodeError');\n\n  IdentityKeyPair = require('../keys/IdentityKeyPair');\n\n  IdentityKey = require('../keys/IdentityKey');\n\n  PreKeyBundle = require('../keys/PreKeyBundle');\n\n  PublicKey = require('../keys/PublicKey');\n\n  KeyPair = require('../keys/KeyPair');\n\n  PreKey = require('../keys/PreKey');\n\n  Envelope = require('../message/Envelope');\n\n  CipherMessage = require('../message/CipherMessage');\n\n  PreKeyMessage = require('../message/PreKeyMessage');\n\n  SessionTag = require('../message/SessionTag');\n\n  PreKeyStore = require('./PreKeyStore');\n\n  ChainKey = require('./ChainKey');\n\n  module.exports = Session = (function() {\n    Session.MAX_RECV_CHAINS = 5;\n\n    Session.MAX_SESSION_STATES = 100;\n\n    function Session() {\n      this.counter = 0;\n      this.local_identity = null;\n      this.pending_prekey = null;\n      this.remote_identity = null;\n      this.session_states = null;\n      this.session_tag = null;\n      this.version = 1;\n      throw new DontCallConstructor(this);\n    }\n\n\n    /*\n    @param local_identity [IdentityKeyPair] Alice's Identity Key Pair\n    @param remote_pkbundle [Proteus.keys.PreKeyBundle] Bob's Pre-Key Bundle\n     */\n\n    Session.init_from_prekey = function(local_identity, remote_pkbundle) {\n      var alice_base, session, session_tag, state;\n      TypeUtil.assert_is_instance(IdentityKeyPair, local_identity);\n      TypeUtil.assert_is_instance(PreKeyBundle, remote_pkbundle);\n      alice_base = KeyPair[\"new\"]();\n      state = SessionState.init_as_alice(local_identity, alice_base, remote_pkbundle);\n      session_tag = SessionTag[\"new\"]();\n      session = ClassUtil.new_instance(Session);\n      session.session_tag = session_tag;\n      session.local_identity = local_identity;\n      session.remote_identity = remote_pkbundle.identity_key;\n      session.pending_prekey = [remote_pkbundle.prekey_id, alice_base.public_key];\n      session.session_states = {};\n      session._insert_session_state(session_tag, state);\n      return session;\n    };\n\n    Session.init_from_message = function(our_identity, prekey_store, envelope) {\n      var pkmsg, plain, session, state;\n      TypeUtil.assert_is_instance(IdentityKeyPair, our_identity);\n      TypeUtil.assert_is_instance(PreKeyStore, prekey_store);\n      TypeUtil.assert_is_instance(Envelope, envelope);\n      pkmsg = (function() {\n        switch (false) {\n          case !(envelope.message instanceof CipherMessage):\n            throw new DecryptError.InvalidMessage('Can\\'t initialise a session from a CipherMessage.');\n            break;\n          case !(envelope.message instanceof PreKeyMessage):\n            return envelope.message;\n          default:\n            throw new DecryptError.InvalidMessage;\n        }\n      })();\n      session = ClassUtil.new_instance(Session);\n      session.session_tag = pkmsg.message.session_tag;\n      session.local_identity = our_identity;\n      session.remote_identity = pkmsg.identity_key;\n      session.pending_prekey = null;\n      session.session_states = {};\n      state = session._new_state(prekey_store, pkmsg);\n      if (!state) {\n        throw new DecryptError.PrekeyNotFound;\n      }\n      plain = state.decrypt(envelope, pkmsg.message);\n      session._insert_session_state(pkmsg.message.session_tag, state);\n      if (pkmsg.prekey_id < PreKey.MAX_PREKEY_ID) {\n        prekey_store.remove(pkmsg.prekey_id);\n      }\n      return [session, plain];\n    };\n\n    Session.prototype._new_state = function(prekey_store, prekey_message) {\n      var prekey;\n      prekey = prekey_store.get_prekey(prekey_message.prekey_id);\n      if (!prekey) {\n        return null;\n      }\n      return SessionState.init_as_bob(this.local_identity, prekey.key_pair, prekey_message.identity_key, prekey_message.base_key);\n    };\n\n    Session.prototype._insert_session_state = function(tag, state) {\n      var obj_size;\n      if (indexOf.call(this.session_states, tag) >= 0) {\n        this.session_states[tag].state = state;\n      } else {\n        if (this.counter >= Number.MAX_SAFE_INTEGER) {\n          this.session_states = {};\n          this.counter = 0;\n        }\n        this.session_states[tag] = {\n          idx: this.counter,\n          tag: tag,\n          state: state\n        };\n        this.counter++;\n      }\n      if (this.session_tag.toString() !== tag.toString()) {\n        this.session_tag = tag;\n      }\n      obj_size = function(obj) {\n        return Object.keys(obj).length;\n      };\n      if (obj_size(this.session_states) < Session.MAX_SESSION_STATES) {\n        return;\n      }\n      return this._evict_oldest_session_state();\n    };\n\n    Session.prototype._evict_oldest_session_state = function() {\n      var k, oldest, reduction, states, v;\n      states = (function() {\n        var j, len, ref, results;\n        ref = this.session_states;\n        results = [];\n        for (v = j = 0, len = ref.length; j < len; v = ++j) {\n          k = ref[v];\n          if (k.toString() !== this.session_tag.toString()) {\n            results.push([k, v]);\n          }\n        }\n        return results;\n      }).call(this);\n      reduction = function(accumulator, item) {\n        var tag, val;\n        tag = item[0];\n        val = item[1];\n        if (!accumulator || val.idx < accumulator.idx) {\n          return {\n            idx: val.idx,\n            tag: k\n          };\n        }\n        return accumulator;\n      };\n      oldest = states.reduce(reduction, null);\n      return delete this.session_states[oldest.tag];\n    };\n\n    Session.prototype.get_local_identity = function() {\n      return this.local_identity.public_key;\n    };\n\n\n    /*\n    @param plaintext [String, Uint8Array] The plaintext which needs to be encrypted\n    @return [Proteus.message.Envelope] Encrypted message\n     */\n\n    Session.prototype.encrypt = function(plaintext) {\n      var state;\n      state = this.session_states[this.session_tag];\n      if (!state) {\n        throw new ProteusError('No session for tag');\n      }\n      return state.state.encrypt(this.local_identity.public_key, this.pending_prekey, this.session_tag, plaintext);\n    };\n\n\n    /*\n    @param prekey_store [Proteus.session.PreKeyStore] Store from which we can fetch local PreKeys\n    @param envelope [Proteus.message.Envelope] Encrypted message\n    @return [Uint8Array] Decrypted message (aka plaintext)\n     */\n\n    Session.prototype.decrypt = function(prekey_store, envelope) {\n      var decrypt_error, e, msg, plaintext, state;\n      TypeUtil.assert_is_instance(PreKeyStore, prekey_store);\n      TypeUtil.assert_is_instance(Envelope, envelope);\n      msg = envelope.message;\n      switch (false) {\n        case !(msg instanceof CipherMessage):\n          return this._decrypt_cipher_message(envelope, envelope.message);\n        case !(msg instanceof PreKeyMessage):\n          if (msg.identity_key.fingerprint() !== this.remote_identity.fingerprint()) {\n            throw new DecryptError.RemoteIdentityChanged;\n          }\n          decrypt_error = null;\n          try {\n            return this._decrypt_cipher_message(envelope, msg.message);\n          } catch (error) {\n            e = error;\n            decrypt_error = e;\n            if (!(e instanceof DecryptError.InvalidSignature || e instanceof DecryptError.InvalidMessage)) {\n              throw e;\n            }\n          }\n          state = this._new_state(prekey_store, msg);\n          if (!state) {\n            throw decrypt_error;\n          }\n          plaintext = state.decrypt(envelope, msg.message);\n          if (msg.prekey_id !== PreKey.MAX_PREKEY_ID) {\n            prekey_store.remove(msg.prekey_id);\n          }\n          this._insert_session_state(msg.message.session_tag, state);\n          this.pending_prekey = null;\n          return plaintext;\n      }\n    };\n\n    Session.prototype._decrypt_cipher_message = function(envelope, msg) {\n      var plaintext, state;\n      state = this.session_states[msg.session_tag];\n      if (!state) {\n        throw new DecryptError.InvalidMessage('No matching session state.');\n      }\n      state = SessionState.deserialise(state.state.serialise());\n      plaintext = state.decrypt(envelope, msg);\n      this.pending_prekey = null;\n      this._insert_session_state(msg.session_tag, state);\n      return plaintext;\n    };\n\n    Session.prototype.serialise = function() {\n      var e;\n      e = new CBOR.Encoder();\n      this.encode(e);\n      return e.get_buffer();\n    };\n\n    Session.deserialise = function(local_identity, buf) {\n      var d;\n      TypeUtil.assert_is_instance(IdentityKeyPair, local_identity);\n      TypeUtil.assert_is_instance(ArrayBuffer, buf);\n      d = new CBOR.Decoder(buf);\n      return Session.decode(local_identity, d);\n    };\n\n    Session.prototype.encode = function(e) {\n      var _, ref, results, state;\n      e.object(6);\n      e.u8(0);\n      e.u8(this.version);\n      e.u8(1);\n      this.session_tag.encode(e);\n      e.u8(2);\n      this.local_identity.public_key.encode(e);\n      e.u8(3);\n      this.remote_identity.encode(e);\n      e.u8(4);\n      if (this.pending_prekey) {\n        e.object(2);\n        e.u8(0);\n        e.u16(this.pending_prekey[0]);\n        e.u8(1);\n        this.pending_prekey[1].encode(e);\n      } else {\n        e[\"null\"]();\n      }\n      e.u8(5);\n      e.object(Object.keys(this.session_states).length);\n      ref = this.session_states;\n      results = [];\n      for (_ in ref) {\n        state = ref[_];\n        state.tag.encode(e);\n        results.push(state.state.encode(e));\n      }\n      return results;\n    };\n\n    Session.decode = function(local_identity, d) {\n      var _, i, ik, j, l, m, nprops, ref, ref1, self, tag;\n      TypeUtil.assert_is_instance(IdentityKeyPair, local_identity);\n      TypeUtil.assert_is_instance(CBOR.Decoder, d);\n      self = ClassUtil.new_instance(Session);\n      nprops = d.object();\n      for (j = 0, ref = nprops - 1; 0 <= ref ? j <= ref : j >= ref; 0 <= ref ? j++ : j--) {\n        switch (d.u8()) {\n          case 0:\n            self.version = d.u8();\n            break;\n          case 1:\n            self.session_tag = SessionTag.decode(d);\n            break;\n          case 2:\n            ik = IdentityKey.decode(d);\n            if (local_identity.public_key.fingerprint() !== ik.fingerprint()) {\n              throw new DecodeError.LocalIdentityChanged;\n            }\n            self.local_identity = local_identity;\n            break;\n          case 3:\n            self.remote_identity = IdentityKey.decode(d);\n            break;\n          case 4:\n            switch (d.optional(function() {\n                  return d.object();\n                })) {\n              case null:\n                self.pending_prekey = null;\n                break;\n              case 2:\n                self.pending_prekey = [null, null];\n                for (_ = l = 0; l <= 1; _ = ++l) {\n                  switch (d.u8()) {\n                    case 0:\n                      self.pending_prekey[0] = d.u16();\n                      break;\n                    case 1:\n                      self.pending_prekey[1] = PublicKey.decode(d);\n                  }\n                }\n                break;\n              default:\n                throw new DecodeError.InvalidType;\n            }\n            break;\n          case 5:\n            self.session_states = {};\n            for (i = m = 0, ref1 = d.object() - 1; 0 <= ref1 ? m <= ref1 : m >= ref1; i = 0 <= ref1 ? ++m : --m) {\n              tag = SessionTag.decode(d);\n              self.session_states[tag] = {\n                idx: i,\n                tag: tag,\n                state: SessionState.decode(d)\n              };\n            }\n            break;\n          default:\n            d.skip();\n        }\n      }\n      TypeUtil.assert_is_integer(self.version);\n      TypeUtil.assert_is_instance(SessionTag, self.session_tag);\n      TypeUtil.assert_is_instance(IdentityKeyPair, self.local_identity);\n      TypeUtil.assert_is_instance(IdentityKey, self.remote_identity);\n      TypeUtil.assert_is_instance(Object, self.session_states);\n      return self;\n    };\n\n    return Session;\n\n  })();\n\n  SessionState = require('./SessionState');\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/session/Session.js\n// module id = 27\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var CBOR, CipherKey, ClassUtil, DontCallConstructor, MacKey, MessageKeys, TypeUtil;\n\n  CBOR = require('cbor-codec');\n\n  DontCallConstructor = require('../errors/DontCallConstructor');\n\n  ClassUtil = require('../util/ClassUtil');\n\n  TypeUtil = require('../util/TypeUtil');\n\n  MacKey = require('../derived/MacKey');\n\n  CipherKey = require('../derived/CipherKey');\n\n  module.exports = MessageKeys = (function() {\n    function MessageKeys() {\n      throw new DontCallConstructor(this);\n    }\n\n    MessageKeys[\"new\"] = function(cipher_key, mac_key, counter) {\n      var mk;\n      TypeUtil.assert_is_instance(CipherKey, cipher_key);\n      TypeUtil.assert_is_instance(MacKey, mac_key);\n      TypeUtil.assert_is_integer(counter);\n      mk = ClassUtil.new_instance(MessageKeys);\n      mk.cipher_key = cipher_key;\n      mk.mac_key = mac_key;\n      mk.counter = counter;\n      return mk;\n    };\n\n    MessageKeys.prototype._counter_as_nonce = function() {\n      var nonce;\n      nonce = new ArrayBuffer(8);\n      new DataView(nonce).setUint32(0, this.counter);\n      return new Uint8Array(nonce);\n    };\n\n    MessageKeys.prototype.encrypt = function(plaintext) {\n      return this.cipher_key.encrypt(plaintext, this._counter_as_nonce());\n    };\n\n    MessageKeys.prototype.decrypt = function(ciphertext) {\n      return this.cipher_key.decrypt(ciphertext, this._counter_as_nonce());\n    };\n\n    MessageKeys.prototype.encode = function(e) {\n      e.object(3);\n      e.u8(0);\n      this.cipher_key.encode(e);\n      e.u8(1);\n      this.mac_key.encode(e);\n      e.u8(2);\n      return e.u32(this.counter);\n    };\n\n    MessageKeys.decode = function(d) {\n      var i, nprops, ref, self;\n      TypeUtil.assert_is_instance(CBOR.Decoder, d);\n      self = ClassUtil.new_instance(MessageKeys);\n      nprops = d.object();\n      for (i = 0, ref = nprops - 1; 0 <= ref ? i <= ref : i >= ref; 0 <= ref ? i++ : i--) {\n        switch (d.u8()) {\n          case 0:\n            self.cipher_key = CipherKey.decode(d);\n            break;\n          case 1:\n            self.mac_key = MacKey.decode(d);\n            break;\n          case 2:\n            self.counter = d.u32();\n            break;\n          default:\n            d.skip();\n        }\n      }\n      TypeUtil.assert_is_instance(CipherKey, self.cipher_key);\n      TypeUtil.assert_is_instance(MacKey, self.mac_key);\n      TypeUtil.assert_is_integer(self.counter);\n      return self;\n    };\n\n    return MessageKeys;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/session/MessageKeys.js\n// module id = 28\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var TypeUtil;\n\n  TypeUtil = require('../util/TypeUtil');\n\n  module.exports = (function() {\n    return {\n\n      /*\n      Concatenates array buffers (usually 8-bit unsigned).\n       */\n      concatenate_array_buffers: function(buffers) {\n        TypeUtil.assert_is_instance(Array, buffers);\n        return buffers.reduce(function(a, b) {\n          var buf;\n          buf = new a.constructor(a.byteLength + b.byteLength);\n          buf.set(a, 0);\n          buf.set(b, a.byteLength);\n          return buf;\n        });\n      },\n      array_buffer_to_string: function(buffer) {\n        return String.fromCharCode.apply(null, buffer);\n      },\n\n      /*\n      @see https://developers.google.com/web/updates/2012/06/How-to-convert-ArrayBuffer-to-and-from-String?hl=en\n       */\n      string_to_array_buffer: function(str) {\n        var array_buffer, bufView, i, strLen;\n        array_buffer = new ArrayBuffer(str.length * 2);\n        bufView = new Uint16Array(array_buffer);\n        i = 0;\n        strLen = str.length;\n        while (i < strLen) {\n          bufView[i] = str.charCodeAt(i);\n          i++;\n        }\n        return array_buffer;\n      },\n      string_to_byte_array: function(string) {\n        var byte_array, index;\n        byte_array = [];\n        for (index in string) {\n          byte_array.push(string.charCodeAt(index));\n        }\n        return byte_array;\n      },\n      string_to_hex: function(input) {\n        var c, i, str, tmp_len;\n        str = '';\n        i = 0;\n        tmp_len = input.length;\n        c = void 0;\n        while (i < tmp_len) {\n          c = input.charCodeAt(i);\n          str += c.toString(16);\n          i += 1;\n        }\n        return str;\n      },\n      byte_array_to_hex: function(bytes) {\n        var hex, i;\n        hex = [];\n        i = 0;\n        while (i < bytes.length) {\n          hex.push((bytes[i] >>> 4).toString(16));\n          hex.push((bytes[i] & 0xF).toString(16));\n          i++;\n        }\n        return hex.join('');\n      },\n      hex_to_byte_array: function(hex) {\n        var bytes, c;\n        bytes = [];\n        c = 0;\n        while (c < hex.length) {\n          bytes.push(parseInt(hex.substr(c, 2), 16));\n          c += 2;\n        }\n        return bytes;\n      },\n      byte_array_to_bit_array: function(byte_array) {\n        var bit_array_to_partial_word, i, out, tmp;\n        bit_array_to_partial_word = function(len, x, _end) {\n          if (len === 32) {\n            return x;\n          }\n          return (_end ? x | 0 : x << 32 - len) + len * 0x10000000000;\n        };\n        out = [];\n        i = void 0;\n        tmp = 0;\n        i = 0;\n        while (i < byte_array.length) {\n          tmp = tmp << 8 | byte_array[i];\n          if ((i & 3) === 3) {\n            out.push(tmp);\n            tmp = 0;\n          }\n          i++;\n        }\n        if (i & 3) {\n          out.push(bit_array_to_partial_word(8 * (i & 3), tmp));\n        }\n        return out;\n      }\n    };\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/util/ArrayUtil.js\n// module id = 29\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var BaseError;\n\n  module.exports = BaseError = (function() {\n    function BaseError(message) {\n      this.name = this.constructor.name;\n      this.message = message;\n      this.stack = (new Error).stack;\n    }\n\n    BaseError.prototype = new Error;\n\n    BaseError.prototype.constructor = BaseError;\n\n    return BaseError;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/cbor-codec/build/cbor/BaseError.js\n// module id = 30\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var CBOR, ChainKey, CipherMessage, ClassUtil, DecryptError, DontCallConstructor, Envelope, MessageKeys, ProteusError, PublicKey, RecvChain, TypeUtil;\n\n  CBOR = require('cbor-codec');\n\n  DontCallConstructor = require('../errors/DontCallConstructor');\n\n  ClassUtil = require('../util/ClassUtil');\n\n  TypeUtil = require('../util/TypeUtil');\n\n  PublicKey = require('../keys/PublicKey');\n\n  ProteusError = require('../errors/ProteusError');\n\n  DecryptError = require('../errors/DecryptError');\n\n  Envelope = require('../message/Envelope');\n\n  CipherMessage = require('../message/CipherMessage');\n\n  MessageKeys = require('./MessageKeys');\n\n  ChainKey = require('./ChainKey');\n\n  module.exports = RecvChain = (function() {\n    RecvChain.MAX_COUNTER_GAP = 1000;\n\n    function RecvChain() {\n      throw new DontCallConstructor(this);\n    }\n\n    RecvChain[\"new\"] = function(chain_key, public_key) {\n      var rc;\n      TypeUtil.assert_is_instance(ChainKey, chain_key);\n      TypeUtil.assert_is_instance(PublicKey, public_key);\n      rc = ClassUtil.new_instance(RecvChain);\n      rc.chain_key = chain_key;\n      rc.ratchet_key = public_key;\n      rc.message_keys = [];\n      return rc;\n    };\n\n    RecvChain.prototype.try_message_keys = function(envelope, msg) {\n      var idx, mk;\n      TypeUtil.assert_is_instance(Envelope, envelope);\n      TypeUtil.assert_is_instance(CipherMessage, msg);\n      if (this.message_keys[0] && this.message_keys[0].counter > msg.counter) {\n        throw new DecryptError.OutdatedMessage;\n      }\n      idx = this.message_keys.findIndex(function(mk) {\n        return mk.counter === msg.counter;\n      });\n      if (idx === -1) {\n        throw new DecryptError.DuplicateMessage;\n      }\n      mk = this.message_keys.splice(idx, 1)[0];\n      if (!envelope.verify(mk.mac_key)) {\n        throw new DecryptError.InvalidSignature;\n      }\n      return mk.decrypt(msg.cipher_text);\n    };\n\n    RecvChain.prototype.stage_message_keys = function(msg) {\n      var _, chk, i, keys, mk, num, ref;\n      TypeUtil.assert_is_instance(CipherMessage, msg);\n      num = msg.counter - this.chain_key.idx;\n      if (num > RecvChain.MAX_COUNTER_GAP) {\n        throw new DecryptError.TooDistantFuture;\n      }\n      keys = [];\n      chk = this.chain_key;\n      for (_ = i = 0, ref = num - 1; 0 <= ref ? i <= ref : i >= ref; _ = 0 <= ref ? ++i : --i) {\n        keys.push(chk.message_keys());\n        chk = chk.next();\n      }\n      mk = chk.message_keys();\n      return [chk, mk, keys];\n    };\n\n    RecvChain.prototype.commit_message_keys = function(keys) {\n      var _, excess, i, ref;\n      TypeUtil.assert_is_instance(Array, keys);\n      keys.map(function(k) {\n        return TypeUtil.assert_is_instance(MessageKeys, k);\n      });\n      if (keys.length > RecvChain.MAX_COUNTER_GAP) {\n        throw new ProteusError('More keys than MAX_COUNTER_GAP');\n      }\n      excess = this.message_keys.length + keys.length - RecvChain.MAX_COUNTER_GAP;\n      for (_ = i = 0, ref = excess - 1; 0 <= ref ? i <= ref : i >= ref; _ = 0 <= ref ? ++i : --i) {\n        this.message_keys.shift();\n      }\n      keys.map((function(_this) {\n        return function(k) {\n          return _this.message_keys.push(k);\n        };\n      })(this));\n      if (keys.length > RecvChain.MAX_COUNTER_GAP) {\n        throw new ProteusError('Skipped keys greater than MAX_COUNTER_GAP');\n      }\n    };\n\n    RecvChain.prototype.encode = function(e) {\n      e.object(3);\n      e.u8(0);\n      this.chain_key.encode(e);\n      e.u8(1);\n      this.ratchet_key.encode(e);\n      e.u8(2);\n      e.array(this.message_keys.length);\n      return this.message_keys.map(function(k) {\n        return k.encode(e);\n      });\n    };\n\n    RecvChain.decode = function(d) {\n      var i, len, nprops, ref, self;\n      TypeUtil.assert_is_instance(CBOR.Decoder, d);\n      self = ClassUtil.new_instance(RecvChain);\n      nprops = d.object();\n      for (i = 0, ref = nprops - 1; 0 <= ref ? i <= ref : i >= ref; 0 <= ref ? i++ : i--) {\n        switch (d.u8()) {\n          case 0:\n            self.chain_key = ChainKey.decode(d);\n            break;\n          case 1:\n            self.ratchet_key = PublicKey.decode(d);\n            break;\n          case 2:\n            self.message_keys = [];\n            len = d.array();\n            while (len--) {\n              self.message_keys.push(MessageKeys.decode(d));\n            }\n            break;\n          default:\n            d.skip();\n        }\n      }\n      TypeUtil.assert_is_instance(ChainKey, self.chain_key);\n      TypeUtil.assert_is_instance(PublicKey, self.ratchet_key);\n      TypeUtil.assert_is_instance(Array, self.message_keys);\n      return self;\n    };\n\n    return RecvChain;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/session/RecvChain.js\n// module id = 31\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var CBOR, ChainKey, CipherKey, ClassUtil, DerivedSecrets, DontCallConstructor, KeyPair, PublicKey, RootKey, TypeUtil;\n\n  CBOR = require('cbor-codec');\n\n  DontCallConstructor = require('../errors/DontCallConstructor');\n\n  ClassUtil = require('../util/ClassUtil');\n\n  TypeUtil = require('../util/TypeUtil');\n\n  PublicKey = require('../keys/PublicKey');\n\n  KeyPair = require('../keys/KeyPair');\n\n  DerivedSecrets = require('../derived/DerivedSecrets');\n\n  CipherKey = require('../derived/CipherKey');\n\n  ChainKey = require('./ChainKey');\n\n  module.exports = RootKey = (function() {\n    function RootKey() {\n      throw new DontCallConstructor(this);\n    }\n\n\n    /*\n    @param key [Proteus.derived.CipherKey] Cipher key generated by derived secrets\n     */\n\n    RootKey.from_cipher_key = function(cipher_key) {\n      var rk;\n      TypeUtil.assert_is_instance(CipherKey, cipher_key);\n      rk = ClassUtil.new_instance(RootKey);\n      rk.key = cipher_key;\n      return rk;\n    };\n\n\n    /*\n    @param ours [KeyPair] Our key pair\n    @param theirs [PublicKey] Their public key\n     */\n\n    RootKey.prototype.dh_ratchet = function(ours, theirs) {\n      var dsecs, secret;\n      TypeUtil.assert_is_instance(KeyPair, ours);\n      TypeUtil.assert_is_instance(PublicKey, theirs);\n      secret = ours.secret_key.shared_secret(theirs);\n      dsecs = DerivedSecrets.kdf(secret, this.key.key, 'dh_ratchet');\n      return [RootKey.from_cipher_key(dsecs.cipher_key), ChainKey.from_mac_key(dsecs.mac_key, 0)];\n    };\n\n    RootKey.prototype.encode = function(e) {\n      e.object(1);\n      e.u8(0);\n      return this.key.encode(e);\n    };\n\n    RootKey.decode = function(d) {\n      var cipher_key, i, nprops, ref;\n      TypeUtil.assert_is_instance(CBOR.Decoder, d);\n      cipher_key = null;\n      nprops = d.object();\n      for (i = 0, ref = nprops - 1; 0 <= ref ? i <= ref : i >= ref; 0 <= ref ? i++ : i--) {\n        switch (d.u8()) {\n          case 0:\n            cipher_key = CipherKey.decode(d);\n            break;\n          default:\n            d.skip();\n        }\n      }\n      return RootKey.from_cipher_key(cipher_key);\n    };\n\n    return RootKey;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/session/RootKey.js\n// module id = 32\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var CBOR, ChainKey, ClassUtil, DontCallConstructor, KeyPair, SendChain, TypeUtil;\n\n  CBOR = require('cbor-codec');\n\n  DontCallConstructor = require('../errors/DontCallConstructor');\n\n  ClassUtil = require('../util/ClassUtil');\n\n  TypeUtil = require('../util/TypeUtil');\n\n  KeyPair = require('../keys/KeyPair');\n\n  ChainKey = require('./ChainKey');\n\n  module.exports = SendChain = (function() {\n    function SendChain() {\n      throw new DontCallConstructor(this);\n    }\n\n    SendChain[\"new\"] = function(chain_key, keypair) {\n      var sc;\n      TypeUtil.assert_is_instance(ChainKey, chain_key);\n      TypeUtil.assert_is_instance(KeyPair, keypair);\n      sc = ClassUtil.new_instance(SendChain);\n      sc.chain_key = chain_key;\n      sc.ratchet_key = keypair;\n      return sc;\n    };\n\n    SendChain.prototype.encode = function(e) {\n      e.object(2);\n      e.u8(0);\n      this.chain_key.encode(e);\n      e.u8(1);\n      return this.ratchet_key.encode(e);\n    };\n\n    SendChain.decode = function(d) {\n      var i, nprops, ref, self;\n      TypeUtil.assert_is_instance(CBOR.Decoder, d);\n      self = ClassUtil.new_instance(SendChain);\n      nprops = d.object();\n      for (i = 0, ref = nprops - 1; 0 <= ref ? i <= ref : i >= ref; 0 <= ref ? i++ : i--) {\n        switch (d.u8()) {\n          case 0:\n            self.chain_key = ChainKey.decode(d);\n            break;\n          case 1:\n            self.ratchet_key = KeyPair.decode(d);\n            break;\n          default:\n            d.skip();\n        }\n      }\n      TypeUtil.assert_is_instance(ChainKey, self.chain_key);\n      TypeUtil.assert_is_instance(KeyPair, self.ratchet_key);\n      return self;\n    };\n\n    return SendChain;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/session/SendChain.js\n// module id = 33\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var ArrayUtil, CBOR, ChainKey, CipherMessage, ClassUtil, DecryptError, DerivedSecrets, DontCallConstructor, Envelope, IdentityKey, IdentityKeyPair, KeyPair, PreKeyBundle, PreKeyMessage, PublicKey, RecvChain, RootKey, SendChain, Session, SessionState, SessionTag, TypeUtil;\n\n  CBOR = require('cbor-codec');\n\n  DontCallConstructor = require('../errors/DontCallConstructor');\n\n  ClassUtil = require('../util/ClassUtil');\n\n  TypeUtil = require('../util/TypeUtil');\n\n  ArrayUtil = require('../util/ArrayUtil');\n\n  DecryptError = require('../errors/DecryptError');\n\n  DerivedSecrets = require('../derived/DerivedSecrets');\n\n  IdentityKeyPair = require('../keys/IdentityKeyPair');\n\n  IdentityKey = require('../keys/IdentityKey');\n\n  PreKeyBundle = require('../keys/PreKeyBundle');\n\n  PublicKey = require('../keys/PublicKey');\n\n  KeyPair = require('../keys/KeyPair');\n\n  Envelope = require('../message/Envelope');\n\n  CipherMessage = require('../message/CipherMessage');\n\n  PreKeyMessage = require('../message/PreKeyMessage');\n\n  SessionTag = require('../message/SessionTag');\n\n  RecvChain = require('./RecvChain');\n\n  SendChain = require('./SendChain');\n\n  ChainKey = require('./ChainKey');\n\n  RootKey = require('./RootKey');\n\n  Session = require('./Session');\n\n  module.exports = SessionState = (function() {\n    function SessionState() {\n      this.recv_chains = null;\n      this.send_chain = null;\n      this.root_key = null;\n      this.prev_counter = null;\n      throw new DontCallConstructor(this);\n    }\n\n    SessionState.init_as_alice = function(alice_identity_pair, alice_base, bob_pkbundle) {\n      var chainkey, chk, dsecs, master_key, recv_chains, ref, rok, rootkey, send_chain, send_ratchet, state;\n      TypeUtil.assert_is_instance(IdentityKeyPair, alice_identity_pair);\n      TypeUtil.assert_is_instance(KeyPair, alice_base);\n      TypeUtil.assert_is_instance(PreKeyBundle, bob_pkbundle);\n      master_key = ArrayUtil.concatenate_array_buffers([alice_identity_pair.secret_key.shared_secret(bob_pkbundle.public_key), alice_base.secret_key.shared_secret(bob_pkbundle.identity_key.public_key), alice_base.secret_key.shared_secret(bob_pkbundle.public_key)]);\n      dsecs = DerivedSecrets.kdf_without_salt(master_key, \"handshake\");\n      rootkey = RootKey.from_cipher_key(dsecs.cipher_key);\n      chainkey = ChainKey.from_mac_key(dsecs.mac_key, 0);\n      recv_chains = [RecvChain[\"new\"](chainkey, bob_pkbundle.public_key)];\n      send_ratchet = KeyPair[\"new\"]();\n      ref = rootkey.dh_ratchet(send_ratchet, bob_pkbundle.public_key), rok = ref[0], chk = ref[1];\n      send_chain = SendChain[\"new\"](chk, send_ratchet);\n      state = ClassUtil.new_instance(SessionState);\n      state.recv_chains = recv_chains;\n      state.send_chain = send_chain;\n      state.root_key = rok;\n      state.prev_counter = 0;\n      return state;\n    };\n\n    SessionState.init_as_bob = function(bob_ident, bob_prekey, alice_ident, alice_base) {\n      var chainkey, dsecs, master_key, rootkey, send_chain, state;\n      TypeUtil.assert_is_instance(IdentityKeyPair, bob_ident);\n      TypeUtil.assert_is_instance(KeyPair, bob_prekey);\n      TypeUtil.assert_is_instance(IdentityKey, alice_ident);\n      TypeUtil.assert_is_instance(PublicKey, alice_base);\n      master_key = ArrayUtil.concatenate_array_buffers([bob_prekey.secret_key.shared_secret(alice_ident.public_key), bob_ident.secret_key.shared_secret(alice_base), bob_prekey.secret_key.shared_secret(alice_base)]);\n      dsecs = DerivedSecrets.kdf_without_salt(master_key, \"handshake\");\n      rootkey = RootKey.from_cipher_key(dsecs.cipher_key);\n      chainkey = ChainKey.from_mac_key(dsecs.mac_key, 0);\n      send_chain = SendChain[\"new\"](chainkey, bob_prekey);\n      state = ClassUtil.new_instance(SessionState);\n      state.recv_chains = [];\n      state.send_chain = send_chain;\n      state.root_key = rootkey;\n      state.prev_counter = 0;\n      return state;\n    };\n\n    SessionState.prototype.ratchet = function(ratchet_key) {\n      var new_ratchet, recv_chain, recv_chain_key, recv_root_key, ref, ref1, send_chain, send_chain_key, send_root_key;\n      new_ratchet = KeyPair[\"new\"]();\n      ref = this.root_key.dh_ratchet(this.send_chain.ratchet_key, ratchet_key), recv_root_key = ref[0], recv_chain_key = ref[1];\n      ref1 = recv_root_key.dh_ratchet(new_ratchet, ratchet_key), send_root_key = ref1[0], send_chain_key = ref1[1];\n      recv_chain = RecvChain[\"new\"](recv_chain_key, ratchet_key);\n      send_chain = SendChain[\"new\"](send_chain_key, new_ratchet);\n      this.root_key = send_root_key;\n      this.prev_counter = this.send_chain.chain_key.idx;\n      this.send_chain = send_chain;\n      this.recv_chains.unshift(recv_chain);\n      if (this.recv_chains.length > Session.MAX_RECV_CHAINS) {\n        this.recv_chains = this.recv_chains.slice(0, Session.MAX_RECV_CHAINS);\n      }\n    };\n\n\n    /*\n    @param identity_key [Proteus.keys.IdentityKey] Public identity key of the local identity key pair\n    @param pending [] Pending pre-key\n    @param tag [Proteus.message.SessionTag] Session tag\n    @param plaintext [String] The plaintext to encrypt\n    \n    @return [Proteus.message.Envelope]\n     */\n\n    SessionState.prototype.encrypt = function(identity_key, pending, tag, plaintext) {\n      var env, message, msgkeys;\n      if (pending) {\n        TypeUtil.assert_is_integer(pending[0]);\n        TypeUtil.assert_is_instance(PublicKey, pending[1]);\n      }\n      TypeUtil.assert_is_instance(IdentityKey, identity_key);\n      TypeUtil.assert_is_instance(SessionTag, tag);\n      msgkeys = this.send_chain.chain_key.message_keys();\n      message = CipherMessage[\"new\"](tag, this.send_chain.chain_key.idx, this.prev_counter, this.send_chain.ratchet_key.public_key, msgkeys.encrypt(plaintext));\n      if (pending) {\n        message = PreKeyMessage[\"new\"](pending[0], pending[1], identity_key, message);\n      }\n      env = Envelope[\"new\"](msgkeys.mac_key, message);\n      this.send_chain.chain_key = this.send_chain.chain_key.next();\n      return env;\n    };\n\n    SessionState.prototype.decrypt = function(envelope, msg) {\n      var chk, idx, mk, mks, plain, rc, ref;\n      TypeUtil.assert_is_instance(Envelope, envelope);\n      TypeUtil.assert_is_instance(CipherMessage, msg);\n      idx = this.recv_chains.findIndex(function(c) {\n        return c.ratchet_key.fingerprint() === msg.ratchet_key.fingerprint();\n      });\n      if (idx === -1) {\n        this.ratchet(msg.ratchet_key);\n        idx = 0;\n      }\n      rc = this.recv_chains[idx];\n      switch (false) {\n        case !(msg.counter < rc.chain_key.idx):\n          return rc.try_message_keys(envelope, msg);\n        case msg.counter !== rc.chain_key.idx:\n          mks = rc.chain_key.message_keys();\n          if (!envelope.verify(mks.mac_key)) {\n            throw new DecryptError.InvalidSignature;\n          }\n          plain = mks.decrypt(msg.cipher_text);\n          rc.chain_key = rc.chain_key.next();\n          return plain;\n        case !(msg.counter > rc.chain_key.idx):\n          ref = rc.stage_message_keys(msg), chk = ref[0], mk = ref[1], mks = ref[2];\n          if (!envelope.verify(mk.mac_key)) {\n            throw new DecryptError.InvalidSignature;\n          }\n          plain = mk.decrypt(msg.cipher_text);\n          rc.chain_key = chk.next();\n          rc.commit_message_keys(mks);\n          return plain;\n      }\n    };\n\n    SessionState.prototype.serialise = function() {\n      var e;\n      e = new CBOR.Encoder();\n      this.encode(e);\n      return e.get_buffer();\n    };\n\n    SessionState.deserialise = function(buf) {\n      TypeUtil.assert_is_instance(ArrayBuffer, buf);\n      return SessionState.decode(new CBOR.Decoder(buf));\n    };\n\n    SessionState.prototype.encode = function(e) {\n      e.object(4);\n      e.u8(0);\n      e.array(this.recv_chains.length);\n      this.recv_chains.map(function(rch) {\n        return rch.encode(e);\n      });\n      e.u8(1);\n      this.send_chain.encode(e);\n      e.u8(2);\n      this.root_key.encode(e);\n      e.u8(3);\n      return e.u32(this.prev_counter);\n    };\n\n    SessionState.decode = function(d) {\n      var i, len, nprops, ref, self;\n      TypeUtil.assert_is_instance(CBOR.Decoder, d);\n      self = ClassUtil.new_instance(SessionState);\n      nprops = d.object();\n      for (i = 0, ref = nprops - 1; 0 <= ref ? i <= ref : i >= ref; 0 <= ref ? i++ : i--) {\n        switch (d.u8()) {\n          case 0:\n            self.recv_chains = [];\n            len = d.array();\n            while (len--) {\n              self.recv_chains.push(RecvChain.decode(d));\n            }\n            break;\n          case 1:\n            self.send_chain = SendChain.decode(d);\n            break;\n          case 2:\n            self.root_key = RootKey.decode(d);\n            break;\n          case 3:\n            self.prev_counter = d.u32();\n            break;\n          default:\n            d.skip();\n        }\n      }\n      TypeUtil.assert_is_instance(Array, self.recv_chains);\n      TypeUtil.assert_is_instance(SendChain, self.send_chain);\n      TypeUtil.assert_is_instance(RootKey, self.root_key);\n      TypeUtil.assert_is_integer(self.prev_counter);\n      return self;\n    };\n\n    return SessionState;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/session/SessionState.js\n// module id = 34\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var ArrayUtil, TypeUtil;\n\n  TypeUtil = require('../util/TypeUtil');\n\n  ArrayUtil = require('../util/ArrayUtil');\n\n  module.exports = (function() {\n    return {\n\n      /*\n      HMAC-based Key Derivation Function\n      \n      @param salt [Uint8Array, String] Salt\n      @param input [Uint8Array, String] Initial Keying Material (IKM)\n      @param info [Uint8Array, String] Key Derivation Data (Info)\n      @param length [Integer] Length of the derived key in bytes (L)\n      \n      @return [Uint8Array] Output Keying Material (OKM)\n       */\n      hkdf: function(salt, input, info, length) {\n        var HASH_LEN, convert_type, expand, extract, key, salt_to_key;\n        convert_type = function(value) {\n          if (typeof value === 'string') {\n            return sodium.from_string(value);\n          }\n          TypeUtil.assert_is_instance(Uint8Array, value);\n          return value;\n        };\n        salt = convert_type(salt);\n        input = convert_type(input);\n        info = convert_type(info);\n        TypeUtil.assert_is_integer(length);\n        HASH_LEN = 32;\n        salt_to_key = function(salt) {\n          var key, keybytes;\n          keybytes = sodium.crypto_auth_hmacsha256_KEYBYTES;\n          if (salt.length > keybytes) {\n            return sodium.crypto_hash_sha256(salt);\n          }\n          key = new Uint8Array(keybytes);\n          key.set(salt);\n          return key;\n        };\n        extract = function(salt, input) {\n          return sodium.crypto_auth_hmacsha256(input, salt_to_key(salt));\n        };\n        expand = function(tag, info, length) {\n          var buf, hmac, i, j, num_blocks, ref, result;\n          num_blocks = Math.ceil(length / HASH_LEN);\n          hmac = new Uint8Array(0);\n          result = new Uint8Array(0);\n          for (i = j = 0, ref = num_blocks - 1; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {\n            buf = ArrayUtil.concatenate_array_buffers([hmac, info, new Uint8Array([i + 1])]);\n            hmac = sodium.crypto_auth_hmacsha256(buf, tag);\n            result = ArrayUtil.concatenate_array_buffers([result, hmac]);\n          }\n          return new Uint8Array(result.buffer.slice(0, length));\n        };\n        key = extract(salt, input);\n        return expand(key, info, length);\n      }\n    };\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/util/KeyDerivationUtil.js\n// module id = 35\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  module.exports = (function() {\n    var crypto;\n    crypto = (typeof window !== 'undefined') && (window.crypto || window.msCrypto);\n    if (crypto) {\n      return (function() {\n        return {\n          random_bytes: function(len) {\n            var buffer, buffer_view;\n            buffer = new ArrayBuffer(len);\n            buffer_view = new Uint8Array(buffer);\n            return crypto.getRandomValues(buffer_view);\n          }\n        };\n      })();\n    } else {\n      crypto = require('crypto');\n      return (function() {\n        return {\n          random_bytes: function(len) {\n            return new Uint8Array(crypto.randomBytes(len));\n          }\n        };\n      })();\n    }\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus/util/RandomUtil.js\n// module id = 36\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var DecodeError, Decoder, Types,\n    slice = [].slice;\n\n  DecodeError = require('./DecodeError');\n\n  Types = require('./Types');\n\n  module.exports = Decoder = (function() {\n    Decoder.prototype.DEFAULT_CONFIG = {\n      max_array_length: 1000,\n      max_bytes_length: 5242880,\n      max_text_length: 5242880,\n      max_object_size: 1000,\n      max_nesting: 16\n    };\n\n    function Decoder(buffer, config) {\n      this.buffer = buffer;\n      this.config = config != null ? config : Decoder.prototype.DEFAULT_CONFIG;\n      this.view = new DataView(this.buffer);\n      return this;\n    }\n\n    Decoder._check_overflow = function(x, overflow) {\n      if (x > overflow) {\n        throw new DecodeError(DecodeError.prototype.INT_OVERFLOW);\n      }\n      return x;\n    };\n\n    Decoder.prototype._advance = function(bytes) {\n      return this.view = new DataView(this.buffer, this.view.byteOffset + bytes);\n    };\n\n    Decoder.prototype._available = function() {\n      return this.view.byteLength;\n    };\n\n    Decoder.prototype._read = function(bytes, closure) {\n      var value;\n      if (this._available < bytes) {\n        throw new DecodeError(DecodeError.prototype.UNEXPECTED_EOF);\n      }\n      value = closure();\n      this._advance(bytes);\n      return value;\n    };\n\n\n    /*\n     * reader-like interface for @buffer\n     */\n\n    Decoder.prototype._u8 = function() {\n      return this._read(1, (function(_this) {\n        return function() {\n          return _this.view.getUint8(0);\n        };\n      })(this));\n    };\n\n    Decoder.prototype._u16 = function() {\n      return this._read(2, (function(_this) {\n        return function() {\n          return _this.view.getUint16(0);\n        };\n      })(this));\n    };\n\n    Decoder.prototype._u32 = function() {\n      return this._read(4, (function(_this) {\n        return function() {\n          return _this.view.getUint32(0);\n        };\n      })(this));\n    };\n\n    Decoder.prototype._u64 = function() {\n      var r64;\n      r64 = (function(_this) {\n        return function(x) {\n          return (_this.view.getUint32(0) * Math.pow(2, 32)) + _this.view.getUint32(4);\n        };\n      })(this);\n      return this._read(8, r64);\n    };\n\n    Decoder.prototype._f32 = function() {\n      return this._read(4, (function(_this) {\n        return function() {\n          return _this.view.getFloat32(0);\n        };\n      })(this));\n    };\n\n    Decoder.prototype._f64 = function() {\n      return this._read(8, (function(_this) {\n        return function() {\n          return _this.view.getFloat64(0);\n        };\n      })(this));\n    };\n\n    Decoder.prototype._read_length = function(minor) {\n      if (0 <= minor && minor <= 23) {\n        return minor;\n      }\n      switch (minor) {\n        case 24:\n          return this._u8();\n        case 25:\n          return this._u16();\n        case 26:\n          return this._u32();\n        case 27:\n          return Decoder._check_overflow(this._u64(), Number.MAX_SAFE_INTEGER);\n      }\n      throw new DecodeError(DecodeError.prototype.UNEXPECTED_TYPE);\n    };\n\n    Decoder.prototype._bytes = function(minor, max_len) {\n      var len;\n      len = this._read_length(minor);\n      if (len > max_len) {\n        throw new DecodeError(DecodeError.prototype.TOO_LONG);\n      }\n      return this._read(len, (function(_this) {\n        return function() {\n          return _this.buffer.slice(_this.view.byteOffset, _this.view.byteOffset + len);\n        };\n      })(this));\n    };\n\n    Decoder.prototype._read_type_info = function() {\n      var major, minor, type;\n      type = this._u8();\n      major = (type & 0xE0) >> 5;\n      minor = type & 0x1F;\n      switch (major) {\n        case 0:\n          type = (function() {\n            if (0 <= minor && minor <= 24) {\n              return Types.prototype.UINT8;\n            } else {\n              switch (minor) {\n                case 25:\n                  return Types.prototype.UINT16;\n                case 26:\n                  return Types.prototype.UINT32;\n                case 27:\n                  return Types.prototype.UINT64;\n                default:\n                  throw new DecodeError(DecodeError.prototype.INVALID_TYPE);\n              }\n            }\n          })();\n          return [type, minor];\n        case 1:\n          type = (function() {\n            if (0 <= minor && minor <= 24) {\n              return Types.prototype.INT8;\n            } else {\n              switch (minor) {\n                case 25:\n                  return Types.prototype.INT16;\n                case 26:\n                  return Types.prototype.INT32;\n                case 27:\n                  return Types.prototype.INT64;\n                default:\n                  throw new DecodeError(DecodeError.prototype.INVALID_TYPE);\n              }\n            }\n          })();\n          return [type, minor];\n        case 2:\n          return [Types.prototype.BYTES, minor];\n        case 3:\n          return [Types.prototype.TEXT, minor];\n        case 4:\n          return [Types.prototype.ARRAY, minor];\n        case 5:\n          return [Types.prototype.OBJECT, minor];\n        case 7:\n          switch (minor) {\n            case 20:\n            case 21:\n              return [Types.prototype.BOOL, minor];\n            case 22:\n              return [Types.prototype.NULL, minor];\n            case 25:\n              return [Types.prototype.FLOAT16, minor];\n            case 26:\n              return [Types.prototype.FLOAT32, minor];\n            case 27:\n              return [Types.prototype.FLOAT64, minor];\n            case 31:\n              return [Types.prototype.BREAK, minor];\n          }\n      }\n      throw new DecodeError(DecodeError.prototype.INVALID_TYPE);\n    };\n\n    Decoder.prototype._type_info_with_assert = function(expected) {\n      var minor, ref, type;\n      ref = this._read_type_info(), type = ref[0], minor = ref[1];\n      if (!Array.isArray(expected)) {\n        expected = [expected];\n      }\n      if (!expected.some(function(e) {\n        return type === e;\n      })) {\n        throw new DecodeError(DecodeError.prototype.UNEXPECTED_TYPE, [type, minor]);\n      }\n      return [type, minor];\n    };\n\n    Decoder.prototype._read_unsigned = function(type, minor) {\n      switch (type) {\n        case Types.prototype.UINT8:\n          if (minor <= 23) {\n            return minor;\n          }\n          return this._u8();\n        case Types.prototype.UINT16:\n          return this._u16();\n        case Types.prototype.UINT32:\n          return this._u32();\n        case Types.prototype.UINT64:\n          return this._u64();\n      }\n      throw new DecodeError(DecodeError.prototype.UNEXPECTED_TYPE, [type, minor]);\n    };\n\n    Decoder.prototype._read_signed = function(overflow, type, minor) {\n      switch (type) {\n        case Types.prototype.INT8:\n          if (minor <= 23) {\n            return -1 - minor;\n          }\n          return -1 - Decoder._check_overflow(this._u8(), overflow);\n        case Types.prototype.INT16:\n          return -1 - Decoder._check_overflow(this._u16(), overflow);\n        case Types.prototype.INT32:\n          return -1 - Decoder._check_overflow(this._u32(), overflow);\n        case Types.prototype.INT64:\n          return -1 - Decoder._check_overflow(this._u64(), overflow);\n        case Types.prototype.UINT8:\n        case Types.prototype.UINT16:\n        case Types.prototype.UINT32:\n        case Types.prototype.UINT64:\n          return Decoder._check_overflow(this._read_unsigned(type, minor), overflow);\n      }\n      throw new DecodeError(DecodeError.prototype.UNEXPECTED_TYPE, [type, minor]);\n    };\n\n\n    /*\n     * public API\n     */\n\n    Decoder.prototype.u8 = function() {\n      return this._read_unsigned.apply(this, this._type_info_with_assert([Types.prototype.UINT8]));\n    };\n\n    Decoder.prototype.u16 = function() {\n      return this._read_unsigned.apply(this, this._type_info_with_assert([Types.prototype.UINT8, Types.prototype.UINT16]));\n    };\n\n    Decoder.prototype.u32 = function() {\n      return this._read_unsigned.apply(this, this._type_info_with_assert([Types.prototype.UINT8, Types.prototype.UINT16, Types.prototype.UINT32]));\n    };\n\n    Decoder.prototype.u64 = function() {\n      return this._read_unsigned.apply(this, this._type_info_with_assert([Types.prototype.UINT8, Types.prototype.UINT16, Types.prototype.UINT32, Types.prototype.UINT64]));\n    };\n\n    Decoder.prototype.i8 = function() {\n      return this._read_signed.apply(this, [127].concat(slice.call(this._type_info_with_assert([Types.prototype.INT8, Types.prototype.UINT8]))));\n    };\n\n    Decoder.prototype.i16 = function() {\n      return this._read_signed.apply(this, [32767].concat(slice.call(this._type_info_with_assert([Types.prototype.INT8, Types.prototype.INT16, Types.prototype.UINT8, Types.prototype.UINT16]))));\n    };\n\n    Decoder.prototype.i32 = function() {\n      return this._read_signed.apply(this, [2147483647].concat(slice.call(this._type_info_with_assert([Types.prototype.INT8, Types.prototype.INT16, Types.prototype.INT32, Types.prototype.UINT8, Types.prototype.UINT16, Types.prototype.UINT32]))));\n    };\n\n    Decoder.prototype.i64 = function() {\n      return this._read_signed.apply(this, [Number.MAX_SAFE_INTEGER].concat(slice.call(this._type_info_with_assert([Types.prototype.INT8, Types.prototype.INT16, Types.prototype.INT32, Types.prototype.INT64, Types.prototype.UINT8, Types.prototype.UINT16, Types.prototype.UINT32, Types.prototype.UINT64]))));\n    };\n\n    Decoder.prototype.unsigned = function() {\n      return this.u64();\n    };\n\n    Decoder.prototype.int = function() {\n      return this.i64();\n    };\n\n    Decoder.prototype.f16 = function() {\n      var exp, half, ldexp, mant, val;\n      this._type_info_with_assert(Types.prototype.FLOAT16);\n      half = this._u16();\n      exp = half >> 10 & 0x1F;\n      mant = half & 0x3FF;\n      ldexp = function(x, exp) {\n        return x * Math.pow(2, exp);\n      };\n      val = (function() {\n        switch (exp) {\n          case 0:\n            return ldexp(mant, -24);\n          case 31:\n            if (mant === 0) {\n              return Number.POSITIVE_INFINITY;\n            } else {\n              return Number.NaN;\n            }\n            break;\n          default:\n            return ldexp(mant + 1024, exp - 25);\n        }\n      })();\n      if (half & 0x8000) {\n        return -val;\n      }\n      return val;\n    };\n\n    Decoder.prototype.f32 = function() {\n      this._type_info_with_assert(Types.prototype.FLOAT32);\n      return this._f32();\n    };\n\n    Decoder.prototype.f64 = function() {\n      this._type_info_with_assert(Types.prototype.FLOAT64);\n      return this._f64();\n    };\n\n    Decoder.prototype.bool = function() {\n      var _, minor, ref;\n      ref = this._type_info_with_assert(Types.prototype.BOOL), _ = ref[0], minor = ref[1];\n      switch (minor) {\n        case 20:\n          return false;\n        case 21:\n          return true;\n        default:\n          throw new DecodeError(DecodeError.prototype.UNEXPECTED_TYPE);\n      }\n    };\n\n    Decoder.prototype.bytes = function() {\n      var _, minor, ref;\n      ref = this._type_info_with_assert(Types.prototype.BYTES), _ = ref[0], minor = ref[1];\n      if (minor === 31) {\n        throw new DecodeError(DecodeError.prototype.UNEXPECTED_TYPE);\n      }\n      return this._bytes(minor, this.config['max_bytes_length']);\n    };\n\n    Decoder.prototype.text = function() {\n      var _, buf, minor, ref, utf8;\n      ref = this._type_info_with_assert(Types.prototype.TEXT), _ = ref[0], minor = ref[1];\n      if (minor === 31) {\n        throw new DecodeError(DecodeError.prototype.UNEXPECTED_TYPE);\n      }\n      buf = this._bytes(minor, this.config['max_text_length']);\n      utf8 = String.fromCharCode.apply(String, new Uint8Array(buf));\n      return decodeURIComponent(escape(utf8));\n    };\n\n    Decoder.prototype.optional = function(closure) {\n      var error;\n      try {\n        return closure();\n      } catch (error1) {\n        error = error1;\n        if (error instanceof DecodeError && error.extra[0] === Types.prototype.NULL) {\n          return null;\n        }\n        throw error;\n      }\n    };\n\n    Decoder.prototype.array = function() {\n      var _, len, minor, ref;\n      ref = this._type_info_with_assert(Types.prototype.ARRAY), _ = ref[0], minor = ref[1];\n      if (minor === 31) {\n        throw new DecodeError(DecodeError.prototype.UNEXPECTED_TYPE);\n      }\n      len = this._read_length(minor);\n      if (len > this.config['max_array_length']) {\n        throw new DecodeError(DecodeError.prototype.TOO_LONG);\n      }\n      return len;\n    };\n\n    Decoder.prototype.object = function() {\n      var _, len, minor, ref;\n      ref = this._type_info_with_assert(Types.prototype.OBJECT), _ = ref[0], minor = ref[1];\n      if (minor === 31) {\n        throw new DecodeError(DecodeError.prototype.UNEXPECTED_TYPE);\n      }\n      len = this._read_length(minor);\n      if (len > this.config['max_object_size']) {\n        throw new DecodeError(DecodeError.prototype.TOO_LONG);\n      }\n      return len;\n    };\n\n    Decoder.prototype._skip_until_break = function(type) {\n      var len, minor, ref, t;\n      while (true) {\n        ref = this._read_type_info(), t = ref[0], minor = ref[1];\n        if (t === Types.prototype.BREAK) {\n          return;\n        }\n        if (t !== type || minor === 31) {\n          throw new DecodeError(DecodeError.prototype.UNEXPECTED_TYPE);\n        }\n        len = this._read_length(minor);\n        this._advance(len);\n      }\n    };\n\n    Decoder.prototype._skip_value = function(level) {\n      var len, minor, ref, type;\n      if (level === 0) {\n        throw new DecodeError(DecodeError.prototype.TOO_NESTED);\n      }\n      ref = this._read_type_info(), type = ref[0], minor = ref[1];\n      switch (type) {\n        case Types.prototype.UINT8:\n        case Types.prototype.UINT16:\n        case Types.prototype.UINT32:\n        case Types.prototype.UINT64:\n        case Types.prototype.INT8:\n        case Types.prototype.INT16:\n        case Types.prototype.INT32:\n        case Types.prototype.INT64:\n          this._read_length(minor);\n          return true;\n        case Types.prototype.BOOL:\n        case Types.prototype.NULL:\n          return true;\n        case Types.prototype.BREAK:\n          return false;\n        case Types.prototype.FLOAT16:\n          this._advance(2);\n          return true;\n        case Types.prototype.FLOAT32:\n          this._advance(4);\n          return true;\n        case Types.prototype.FLOAT64:\n          this._advance(8);\n          return true;\n        case Types.prototype.BYTES:\n        case Types.prototype.TEXT:\n          if (minor === 31) {\n            this._skip_until_break(type);\n            return true;\n          }\n          len = this._read_length(minor);\n          this._advance(len);\n          return true;\n        case Types.prototype.ARRAY:\n        case Types.prototype.OBJECT:\n          if (minor === 31) {\n            while (this._skip_value(level - 1)) {}\n            return true;\n          }\n          len = this._read_length(minor);\n          while (len--) {\n            this._skip_value(level - 1);\n          }\n          return true;\n      }\n    };\n\n    Decoder.prototype.skip = function() {\n      return this._skip_value(this.config['max_nesting']);\n    };\n\n    return Decoder;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/cbor-codec/build/cbor/Decoder.js\n// module id = 37\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  var DecodeError, Encoder, Types;\n\n  DecodeError = require('./DecodeError');\n\n  Types = require('./Types');\n\n  module.exports = Encoder = (function() {\n    function Encoder() {\n      this.buffer = new ArrayBuffer(4);\n      this.view = new DataView(this.buffer);\n      return this;\n    }\n\n    Encoder.prototype.get_buffer = function() {\n      return this.buffer.slice(0, this.view.byteOffset);\n    };\n\n    Encoder.prototype._grow_buffer = function(need_nbytes) {\n      var new_buf, new_len;\n      new_len = Math.max(this.buffer.byteLength * 1.5, this.buffer.byteLength + need_nbytes);\n      new_buf = new ArrayBuffer(new_len);\n      new Uint8Array(new_buf).set(new Uint8Array(this.buffer));\n      this.buffer = new_buf;\n      return this.view = new DataView(this.buffer, this.view.byteOffset);\n    };\n\n    Encoder.prototype._ensure = function(bytes) {\n      if (!(this.view.byteLength < bytes)) {\n        return;\n      }\n      return this._grow_buffer(bytes);\n    };\n\n    Encoder.prototype._advance = function(bytes) {\n      return this.view = new DataView(this.buffer, this.view.byteOffset + bytes);\n    };\n\n    Encoder.prototype._write = function(bytes, closure) {\n      this._ensure(bytes);\n      closure();\n      return this._advance(bytes);\n    };\n\n    Encoder.prototype._write_type_and_len = function(type, len) {\n      var major;\n      major = (Types.major(type)) << 5;\n      if (0 <= len && len <= 23) {\n        return this._u8(major | len);\n      } else if (24 <= len && len <= 255) {\n        this._u8(major | 24);\n        return this._u8(len);\n      } else if (0x100 <= len && len <= 0xFFFF) {\n        this._u8(major | 25);\n        return this._u16(len);\n      } else if (0x10000 <= len && len <= 0xFFFFFFFF) {\n        this._u8(major | 26);\n        return this._u32(len);\n      } else if (len <= Number.MAX_SAFE_INTEGER) {\n        this._u8(major | 27);\n        return this._u64(len);\n      } else {\n        throw new RangeError('Invalid size for CBOR object');\n      }\n    };\n\n\n    /*\n     * writer-like interface over our ArrayBuffer\n     */\n\n    Encoder.prototype._u8 = function(x) {\n      return this._write(1, (function(_this) {\n        return function() {\n          return _this.view.setUint8(0, x);\n        };\n      })(this));\n    };\n\n    Encoder.prototype._u16 = function(x) {\n      return this._write(2, (function(_this) {\n        return function() {\n          return _this.view.setUint16(0, x);\n        };\n      })(this));\n    };\n\n    Encoder.prototype._u32 = function(x) {\n      return this._write(4, (function(_this) {\n        return function() {\n          return _this.view.setUint32(0, x);\n        };\n      })(this));\n    };\n\n    Encoder.prototype._u64 = function(x) {\n      var high, low, w64;\n      low = x % Math.pow(2, 32);\n      high = (x - low) / Math.pow(2, 32);\n      w64 = (function(_this) {\n        return function(x) {\n          _this.view.setUint32(0, high);\n          return _this.view.setUint32(4, low);\n        };\n      })(this);\n      return this._write(8, w64, x);\n    };\n\n    Encoder.prototype._f32 = function(x) {\n      return this._write(4, (function(_this) {\n        return function() {\n          return _this.view.setFloat32(0, x);\n        };\n      })(this));\n    };\n\n    Encoder.prototype._f64 = function(x) {\n      return this._write(8, (function(_this) {\n        return function() {\n          return _this.view.setFloat64(0, x);\n        };\n      })(this));\n    };\n\n    Encoder.prototype._bytes = function(x) {\n      var nbytes;\n      nbytes = x.byteLength;\n      this._ensure(nbytes);\n      new Uint8Array(this.buffer, this.view.byteOffset).set(x);\n      return this._advance(nbytes);\n    };\n\n\n    /*\n     * public API\n     */\n\n    Encoder.prototype.u8 = function(x) {\n      if (0 <= x && x <= 23) {\n        return this._u8(x);\n      } else if (24 <= x && x <= 255) {\n        this._u8(24);\n        return this._u8(x);\n      } else {\n        throw new RangeError('Invalid u8');\n      }\n    };\n\n    Encoder.prototype.u16 = function(x) {\n      if (0 <= x && x <= 23) {\n        return this._u8(x);\n      } else if (24 <= x && x <= 255) {\n        this._u8(24);\n        return this._u8(x);\n      } else if (0x100 <= x && x <= 0xFFFF) {\n        this._u8(25);\n        return this._u16(x);\n      } else {\n        throw new RangeError('Invalid u16');\n      }\n    };\n\n    Encoder.prototype.u32 = function(x) {\n      if (0 <= x && x <= 23) {\n        return this._u8(x);\n      } else if (24 <= x && x <= 255) {\n        this._u8(24);\n        return this._u8(x);\n      } else if (0x100 <= x && x <= 0xFFFF) {\n        this._u8(25);\n        return this._u16(x);\n      } else if (0x10000 <= x && x <= 0xFFFFFFFF) {\n        this._u8(26);\n        return this._u32(x);\n      } else {\n        throw new RangeError('Invalid u32');\n      }\n    };\n\n    Encoder.prototype.u64 = function(x) {\n      if (0 <= x && x <= 23) {\n        return this._u8(x);\n      } else if (24 <= x && x <= 255) {\n        this._u8(24);\n        return this._u8(x);\n      } else if (0x100 <= x && x <= 0xFFFF) {\n        this._u8(25);\n        return this._u16(x);\n      } else if (0x10000 <= x && x <= 0xFFFFFFFF) {\n        this._u8(26);\n        return this._u32(x);\n      } else if (x <= Number.MAX_SAFE_INTEGER) {\n        this._u8(27);\n        return this._u64(x);\n      } else {\n        throw new RangeError('Invalid unsigned integer');\n      }\n    };\n\n    Encoder.prototype.i8 = function(x) {\n      if (x >= 0) {\n        return this._u8(x);\n      }\n      x = -1 - x;\n      if (0 <= x && x <= 23) {\n        return this._u8(0x20 | x);\n      } else if (24 <= x && x <= 255) {\n        this._u8(0x20 | 24);\n        return this._u8(x);\n      } else {\n        throw new RangeError('Invalid i8');\n      }\n    };\n\n    Encoder.prototype.i16 = function(x) {\n      if (x >= 0) {\n        return this._u16(x);\n      }\n      x = -1 - x;\n      if (0 <= x && x <= 23) {\n        return this._u8(0x20 | x);\n      } else if (24 <= x && x <= 255) {\n        this._u8(0x20 | 24);\n        return this._u8(x);\n      } else if (0x100 <= x && x <= 0xFFFF) {\n        this._u8(0x20 | 25);\n        return this._u16(x);\n      } else {\n        throw new RangeError('Invalid i16');\n      }\n    };\n\n    Encoder.prototype.i32 = function(x) {\n      if (x >= 0) {\n        return this._u32(x);\n      }\n      x = -1 - x;\n      if (0 <= x && x <= 23) {\n        return this._u8(0x20 | x);\n      } else if (24 <= x && x <= 255) {\n        this._u8(0x20 | 24);\n        return this._u8(x);\n      } else if (0x100 <= x && x <= 0xFFFF) {\n        this._u8(0x20 | 25);\n        return this._u16(x);\n      } else if (0x10000 <= x && x <= 0xFFFFFFFF) {\n        this._u8(0x20 | 26);\n        return this._u32(x);\n      } else {\n        throw new RangeError('Invalid i32');\n      }\n    };\n\n    Encoder.prototype.i64 = function(x) {\n      if (x >= 0) {\n        return this._u64(x);\n      }\n      x = -1 - x;\n      if (0 <= x && x <= 23) {\n        return this._u8(0x20 | x);\n      } else if (24 <= x && x <= 255) {\n        this._u8(0x20 | 24);\n        return this._u8(x);\n      } else if (0x100 <= x && x <= 0xFFFF) {\n        this._u8(0x20 | 25);\n        return this._u16(x);\n      } else if (0x10000 <= x && x <= 0xFFFFFFFF) {\n        this._u8(0x20 | 26);\n        return this._u32(x);\n      } else if (x <= Number.MAX_SAFE_INTEGER) {\n        this._u8(0x20 | 27);\n        return this._u64(x);\n      } else {\n        throw new RangeError('Invalid i64');\n      }\n    };\n\n    Encoder.prototype.f32 = function(x) {\n      this._u8(0xE0 | 26);\n      return this._f32(x);\n    };\n\n    Encoder.prototype.f64 = function(x) {\n      this._u8(0xE0 | 27);\n      return this._f64(x);\n    };\n\n    Encoder.prototype.bool = function(x) {\n      return this._u8(0xE0 | (x ? 21 : 20));\n    };\n\n    Encoder.prototype.bytes = function(x) {\n      this._write_type_and_len(Types.prototype.BYTES, x.byteLength);\n      return this._bytes(x);\n    };\n\n    Encoder.prototype.text = function(x) {\n      var utf8;\n      utf8 = unescape(encodeURIComponent(x));\n      this._write_type_and_len(Types.prototype.TEXT, utf8.length);\n      return this._bytes(new Uint8Array(utf8.split('').map(function(c) {\n        return c.charCodeAt(0);\n      })));\n    };\n\n    Encoder.prototype[\"null\"] = function() {\n      return this._u8(0xE0 | 22);\n    };\n\n    Encoder.prototype.undefined = function() {\n      return this._u8(0xE0 | 23);\n    };\n\n    Encoder.prototype.array = function(len) {\n      return this._write_type_and_len(Types.prototype.ARRAY, len);\n    };\n\n    Encoder.prototype.array_begin = function() {\n      return this._u8(0x9F);\n    };\n\n    Encoder.prototype.array_end = function() {\n      return this._u8(0xFF);\n    };\n\n    Encoder.prototype.object = function(len) {\n      return this._write_type_and_len(Types.prototype.OBJECT, len);\n    };\n\n    Encoder.prototype.object_begin = function() {\n      return this._u8(0xBF);\n    };\n\n    Encoder.prototype.object_end = function() {\n      return this._u8(0xFF);\n    };\n\n    return Encoder;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/cbor-codec/build/cbor/Encoder.js\n// module id = 38\n// module chunks = 0","// Generated by CoffeeScript 1.11.1\n(function() {\n  module.exports = {\n    errors: {\n      ProteusError: require('./proteus/errors/ProteusError'),\n      DecodeError: require('./proteus/errors/DecodeError'),\n      DecryptError: require('./proteus/errors/DecryptError')\n    },\n    keys: {\n      IdentityKey: require('./proteus/keys/IdentityKey'),\n      IdentityKeyPair: require('./proteus/keys/IdentityKeyPair'),\n      KeyPair: require('./proteus/keys/KeyPair'),\n      PreKeyAuth: require('./proteus/keys/PreKeyAuth'),\n      PreKeyBundle: require('./proteus/keys/PreKeyBundle'),\n      PreKey: require('./proteus/keys/PreKey'),\n      PublicKey: require('./proteus/keys/PublicKey'),\n      SecretKey: require('./proteus/keys/SecretKey')\n    },\n    message: {\n      Message: require('./proteus/message/Message'),\n      CipherMessage: require('./proteus/message/CipherMessage'),\n      PreKeyMessage: require('./proteus/message/PreKeyMessage'),\n      Envelope: require('./proteus/message/Envelope')\n    },\n    session: {\n      PreKeyStore: require('./proteus/session/PreKeyStore'),\n      Session: require('./proteus/session/Session')\n    }\n  };\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/commonjs/proteus.js\n// module id = 40\n// module chunks = 0"],"sourceRoot":""}